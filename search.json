[{"path":[]},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ropenspain.github.io/climaemet/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ropenspain.github.io/climaemet/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Manuel Pizarro  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. climaemet Copyright (C) 2020 Manuel Pizarro This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/articles/climaemet.html","id":"get-your-api-key","dir":"Articles","previous_headings":"API Key","what":"Get your API Key","title":"Get started with climaemet 1.0.0","text":"able download data AEMET need free API key can get https://opendata.aemet.es/centrodedescargas/obtencionAPIKey API Key, can use following methods:","code":""},{"path":"https://ropenspain.github.io/climaemet/articles/climaemet.html","id":"a--set-api-key-with-aemet_api_key","dir":"Articles","previous_headings":"API Key > Get your API Key","what":"a. Set API Key with aemet_api_key()","title":"Get started with climaemet 1.0.0","text":"recommended option. Just type: Using install = TRUE ensures API key stored local computer reloaded every time load library. now can forget API keys!","code":"aemet_api_key(\"YOUR_API_KEY\", install = TRUE)"},{"path":"https://ropenspain.github.io/climaemet/articles/climaemet.html","id":"b--use-an-environment-variable","dir":"Articles","previous_headings":"API Key > Get your API Key","what":"b. Use an environment variable","title":"Get started with climaemet 1.0.0","text":"temporary alternative. can set API key environment variable Note valid current session. need re-run command time restart session.","code":"Sys.setenv(AEMET_API_KEY = \"YOUR_API_KEY\")"},{"path":"https://ropenspain.github.io/climaemet/articles/climaemet.html","id":"c--modify-your--renviron-file","dir":"Articles","previous_headings":"API Key > Get your API Key","what":"c. Modify your .Renviron file","title":"Get started with climaemet 1.0.0","text":"stores API key permanently machine. can start editing .Renviron running command: Now can add following line .Renviron file:","code":"usethis::edit_r_environ() AEMET_API_KEY = YOUR_API_KEY"},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/articles/climaemet.html","id":"tidyverse-format","dir":"Articles","previous_headings":"New features","what":"tidyverse format","title":"Get started with climaemet 1.0.0","text":"v1.0.0 onward, climaemet provides results tibble format. Also, functions try guess correct format fields (.e. something Date/Hour now hour, numbers parsed double, etc.). See tibble displayed: Note possible, data representing dates numbers converted right format.","code":"# See a tibble in action  aemet_last_obs(\"9434\") #> # A tibble: 24 × 25 #>    idema   lon fint                 prec   alt  vmax    vv    dv   lat  dmax ubi         pres    hr stdvv    ts #>    <chr> <dbl> <dttm>              <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <chr>      <dbl> <dbl> <dbl> <dbl> #>  1 9434  -1.00 2022-05-18 07:00:00     0   249   3.1   1.8   303  41.7   340 ZARAGOZA …  990     56   0.3  28.4 #>  2 9434  -1.00 2022-05-18 08:00:00     0   249   3.9   1.8   305  41.7   310 ZARAGOZA …  990.    52   0.5  32.4 #>  3 9434  -1.00 2022-05-18 09:00:00     0   249   3.3   1.3   330  41.7   323 ZARAGOZA …  990.    47   0.4  34.2 #>  4 9434  -1.00 2022-05-18 10:00:00     0   249   4.1   1.6   123  41.7   143 ZARAGOZA …  989     42   0.6  34.8 #>  5 9434  -1.00 2022-05-18 11:00:00     0   249   4.7   2.3    76  41.7    93 ZARAGOZA …  988.    36   0.7  36.7 #>  6 9434  -1.00 2022-05-18 12:00:00     0   249   6.9   4.3   109  41.7   120 ZARAGOZA …  987.    33   1    36.6 #>  7 9434  -1.00 2022-05-18 13:00:00     0   249   7.2   4.6   112  41.7   110 ZARAGOZA …  986.    30   1    37.8 #>  8 9434  -1.00 2022-05-18 14:00:00     0   249   7.7   3.5    84  41.7    95 ZARAGOZA …  986.    21   0.8  36.2 #>  9 9434  -1.00 2022-05-18 15:00:00     0   249   8.1   4.5   107  41.7   105 ZARAGOZA …  985.    24   1.4  39.2 #> 10 9434  -1.00 2022-05-18 16:00:00     0   249   7.3   4.7   113  41.7   118 ZARAGOZA …  985.    26   0.7  36.8 #> # … with 14 more rows, and 10 more variables: pres_nmar <dbl>, tamin <dbl>, ta <dbl>, tamax <dbl>, tpr <dbl>, #> #   stddv <dbl>, inso <dbl>, tss5cm <dbl>, pacutp <dbl>, tss20cm <dbl>"},{"path":"https://ropenspain.github.io/climaemet/articles/climaemet.html","id":"spatial-objects-sf","dir":"Articles","previous_headings":"New features","what":"Spatial objects: sf","title":"Get started with climaemet 1.0.0","text":"Another major change v1.0.0 ability return information spatial sf format, using return_sf = TRUE. coordinate reference system (CRS) used EPSG 4326, correspond World Geodetic System (WGS) return coordinates latitude/longitude (unprojected coordinates):","code":"# You would need to install `sf` if not installed yet # run install.packages(\"sf\") for installation  library(ggplot2) library(dplyr)  all_stations <- aemet_last_obs(return_sf = TRUE) # Last hour all_last <-   all_stations %>% filter(fint == all_stations[[\"fint\"]][1])  last_hour <- max(all_last$fint)   ggplot(all_last) +   geom_sf(aes(col = ta),     shape = 19,     size = 2   ) +   labs(     title = \"Temperature in Spain\",     subtitle = last_hour,     color = \"Max temp.\\n(celsius)\",     caption = \"Source: AEMET\"   ) +   scale_colour_gradientn(     colours = hcl.colors(5, \"RdBu\", rev = TRUE),     guide = \"legend\",     n.breaks = 7   ) +   theme_bw() +   theme(     panel.border = element_blank(),     plot.title = element_text(size = 23, face = \"bold\"),     plot.subtitle = element_text(size = 16, face = \"italic\"),     plot.caption = element_text(size = 15),     legend.text = element_text(size = 15),     legend.title = element_text(size = 15)   )"},{"path":"https://ropenspain.github.io/climaemet/articles/climaemet.html","id":"further-enhancements","dir":"Articles","previous_headings":"","what":"Further enhancements","title":"Get started with climaemet 1.0.0","text":"enhancements included v1.0.0: functions now vectorized. New function get_metadata_aemet(). New function ggclimat_walter_lieth(). function now default climatogram_* functions (experimental). Old behavior can reproduced options ggplot2 = FALSE. Plot functions gains new parameters (verbose ...). Now possible pass colors plotting functions. New example datasets: climaemet::climaemet_9434_climatogram, climaemet::climaemet_9434_temp, climaemet::climaemet_9434_wind.","code":""},{"path":"https://ropenspain.github.io/climaemet/articles/interpolation.html","id":"initial-config","dir":"Articles","previous_headings":"","what":"Initial config","title":"Spatial Interpolation with climaemet","text":"analysis, need following libraries:","code":"library(climaemet) library(mapSpain) # Base maps of Spain library(sf) # spatial shape handling library(gstat) # for spatial interpolation library(dplyr) # data handling library(ggplot2) # for plots library(gganimate) # we would create an animation library(gifski)"},{"path":"https://ropenspain.github.io/climaemet/articles/interpolation.html","id":"retrieving-data","dir":"Articles","previous_headings":"","what":"Retrieving data","title":"Spatial Interpolation with climaemet","text":"choose daily climatic data Winter 2020-2021 Spain. Note first half January, Storm Filomena brought unusual heavy snowfall parts Spain, Madrid recording heaviest snowfall since 1971. able spot .  load also basic shapefile Spain using mapSpain:  can seed, climatic data available far restricted stations (points), want extend values whole territory.","code":"clim_data <- aemet_daily_clim(   start = \"2020-12-21\",   end = \"2021-03-20\",   return_sf = TRUE )  clim_data_clean <- clim_data %>%   # Exclude Canary Islands from analysis   filter(!provincia %in% c(\"LAS PALMAS\", \"STA. CRUZ DE TENERIFE\")) %>%   dplyr::select(fecha, tmed) %>%   # Exclude NAs   filter(!is.na(tmed))  summary(clim_data_clean$tmed) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> -15.200   6.100   9.500   8.877  12.200  25.000  ggplot(clim_data_clean) +   geom_sf() CCAA <- esp_get_ccaa(epsg = 4326) %>%   # Exclude Canary Islands from analysis   filter(ine.ccaa.name != \"Canarias\")  ggplot(CCAA) +   geom_sf() +   geom_sf(data = clim_data_clean)"},{"path":"https://ropenspain.github.io/climaemet/articles/interpolation.html","id":"filling-the-gaps-interpolation","dir":"Articles","previous_headings":"","what":"Filling the gaps: Interpolation","title":"Spatial Interpolation with climaemet","text":"need predict values locations measurements made, need interpolate data. example apply Inverse Distance Weighted method, one several approaches perform spatial interpolation. recommend article perform analysis R. process follow: Create spatial object (grid) predicted values applied. Perform spatial interpolation. Visualize results.","code":""},{"path":"https://ropenspain.github.io/climaemet/articles/interpolation.html","id":"creating-a-grid","dir":"Articles","previous_headings":"Filling the gaps: Interpolation","what":"Creating a grid","title":"Spatial Interpolation with climaemet","text":"analysis, need destination object locations predicted. common technique create spatial grid (“raster”) covering targeted locations. example, use sf create regular grid converted raster. important thing consider spatial analysis visualization coordinate reference system (CRS). won’t cover detail article, mention key considerations: using several spatial objects, ensure present CRS. can achieved projecting objects (.e. transforming coordinates) CRS. Longitude/latitude coordinates unprojected coordinates. project object (.e. Mercator projection) actually change values every point (x,y) coordinates (.e. projection transformation coordinates.) measuring distance meters, etc. choose right projection. Distances unprojected coordinates meaningless. Think 1 degree longitude equator means 111 kms North Pole means roughly 0.11 m. degrees just split circumference equally spaced buckets, Earth spheroid circumferences different latitudes doesn’t length (opposed cylinder, circumferences latitude y-axis.) exercise, choose project objects ETRS89 / UTM zone 30N EPSG:25830, provides x y values meters maximizes accuracy Spain. Now, create regular grid using sf. grid composed equally spaced points whole extent (bounding box) Spain. use density 5000 (m), grid density 5 x 5 kms (25 km2):","code":"clim_data_utm <- st_transform(clim_data_clean, 25830) CCAA_utm <- st_transform(CCAA, 25830)  # Note the original projection  st_crs(CCAA)$proj4string #> [1] \"+proj=longlat +datum=WGS84 +no_defs\"  # vs the utm projection  st_crs(CCAA_utm)$proj4string #> [1] \"+proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\" # Create grid 5*5 km (25 km2)  grd_sf <- st_as_sfc(st_bbox(CCAA_utm)) %>%   st_make_grid(cellsize = 5000, what = \"centers\")  # Number of points  length(grd_sf) #> [1] 44426"},{"path":"https://ropenspain.github.io/climaemet/articles/interpolation.html","id":"interpolating-the-data","dir":"Articles","previous_headings":"Filling the gaps: Interpolation","what":"Interpolating the data","title":"Spatial Interpolation with climaemet","text":"Now just need populate (empty) grid predicted values based observations:  Let’s create nice ggplot2 plot! See also Royé (2020) .","code":"# Test with a single day  test_day <- clim_data_utm %>% filter(fecha == \"2021-01-08\")  # Interpolate temp  interp_temp <- gstat::idw(tmed ~ 1,   # Formula interpolation   test_day,   # Origin   newdata = grd_sf,   # Destination   idp = 2.0 ) #> [inverse distance weighted interpolation]  plot(interp_temp[\"var1.pred\"]) # Making a nice plot on ggplot2 coords <- st_coordinates(interp_temp) values <- interp_temp$var1.pred  temp_values <- data.frame(   x = coords[, 1],   y = coords[, 2],   temp = values )  # Get min and max from interpolated values min_temp <- floor(min(temp_values$temp)) max_temp <- ceiling(max(temp_values$temp))  ggplot() +   geom_sf(data = CCAA_utm, fill = \"grey95\") +   geom_tile(data = temp_values, aes(x = x, y = y, fill = temp)) +   scale_fill_gradientn(     colours = hcl.colors(11, \"Spectral\", rev = TRUE, alpha = 0.7),     limits = c(min_temp, max_temp)   ) +   theme_minimal() +   ylab(NULL) +   xlab(NULL) +   labs(     title = \"Avg. Temperature in Spain\",     subtitle = \"2021-01-08\",     caption = \"Data: AEMET, IGN\",     fill = \"C\"   )"},{"path":"https://ropenspain.github.io/climaemet/articles/interpolation.html","id":"animation","dir":"Articles","previous_headings":"","what":"Animation","title":"Spatial Interpolation with climaemet","text":"section, loop dates create final animation observe evolution temperature winter 2020/21. Now use gganimate create animation:","code":"# Extending and animating dates <- sort(unique(clim_data_clean$fecha))   # Loop through days and interpolate  interp_res <- NULL  for (i in seq_len(length(dates))) {   thisdate <- dates[i]   tmp_day <- clim_data_utm %>% filter(fecha == thisdate)    interp_day <-     gstat::idw(tmed ~ 1,       tmp_day,       newdata = grd_sf,       idp = 2.0     )    # Select only points in the area   inside <- st_contains(st_union(CCAA_utm), interp_day, sparse = TRUE)   interp_day <- interp_day[unlist(inside), ]    coords <- st_coordinates(interp_day)   values <- interp_day$var1.pred    interp_day <- data.frame(     x = coords[, 1],     y = coords[, 2],     temp = values   )     interp_day$id <-     seq_len(nrow(interp_day)) # We would need the id later   interp_day$fecha <- thisdate    interp_res <- dplyr::bind_rows(interp_res, interp_day) } min_temp2 <- floor(min(interp_res$temp)) max_temp2 <- ceiling(max(interp_res$temp))   anim <- ggplot() +   geom_tile(data = interp_res, aes(x = x, y = y, fill = temp)) +   geom_sf(data = CCAA_utm, fill = \"transparent\") +   coord_sf(expand = FALSE) +   scale_fill_gradientn(     colours = hcl.colors(20, \"Spectral\", rev = TRUE, alpha = 0.8),     limits = c(min_temp2, max_temp2),     labels = function(x) {       paste0(x, \"º\")     }   ) +   theme_minimal() +   ylab(NULL) +   xlab(NULL) +   transition_time(fecha) +   labs(     title = \"Avg. Temperature in Spain\",     subtitle = \"{frame_time}\",     caption = \"Data: AEMET, IGN\",     fill = \"\"   )  anim_save(\"winter_2021.gif\", anim,   duration = length(dates), # 1 date per second   rewind = TRUE )"},{"path":"https://ropenspain.github.io/climaemet/articles/interpolation.html","id":"geogrid","dir":"Articles","previous_headings":"","what":"Geogrid","title":"Spatial Interpolation with climaemet","text":"Let’s plot histogram Autonomous Community using geofacet package:","code":"library(geofacet)  clim_data_geofacet <- clim_data %>%   st_drop_geometry() %>%   select(fecha, tmed, provincia) %>%   filter(!is.na(tmed))  # Paste Province info and codes clim_data_mean <- clim_data_geofacet %>%   mutate(name_norm = ifelse(     provincia == \"STA. CRUZ DE TENERIFE\",     \"Santa Cruz de Tenerife\",     provincia   )) %>%   mutate(name_norm = esp_dict_translate(name_norm, \"es\")) %>%   mutate(cpro = esp_dict_region_code(name_norm, destination = \"cpro\"))  # Paste CCAA codes and names clim_data_mean <- clim_data_mean %>%   left_join(esp_codelist, by = \"cpro\") %>%   group_by(fecha, ine.ccaa.name, codauto) %>%   summarize(     mean_tmed = mean(tmed, na.rm = TRUE),     obs = n(),     .groups = \"keep\"   ) %>%   mutate(code = codauto)  # Label the grid with shortnames ccaagrid <- geofacet::spain_ccaa_grid1 %>%   left_join(esp_codelist[c(\"codauto\", \"ccaa.shortname.es\")],     by = c(\"code\" = \"codauto\")   ) %>%   mutate(name = ccaa.shortname.es) %>%   select(-ccaa.shortname.es) %>%   distinct()  # Abbrev. ccaagrid$name <- gsub(\"Comunidad\", \"C.\", ccaagrid$name)  # Plot ggplot(clim_data_mean, aes(fecha, mean_tmed)) +   geom_line(color = \"steelblue\") +   # Line on Filomena peak   geom_vline(     xintercept = as.Date(\"2021-01-08\"),     colour = \"red\"   ) +   facet_geo(~code,     grid = ccaagrid,     scales = \"fixed\",     label = \"name\"   ) +   ylab(\"Mean Temperature\") +   xlab(\"\") +   theme_minimal() +   theme(     strip.text.x = element_text(size = 7),     axis.text.x = element_text(       color = \"grey20\",       size = 5,       angle = 90,       hjust = .5,       vjust = .5,       face = \"plain\"     ),     axis.text.y = element_text(       color = \"grey20\",       size = 5,       angle = 0,       hjust = 1,       vjust = 0,       face = \"plain\"     )   )"},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"what-are-spatial-data","dir":"Articles","previous_headings":"","what":"What are spatial data?","title":"Dealing with spatial data","text":"Geospatial data data contains information specific location Earth’s surface. Spatial data arise myriad fields applications, also wealth spatial data types. Cressie (1993) provides simple useful classification spatial data: Geostatistical data. example, level (ln)CO Madrid:  Lattice data. example, Organ donor rate country.  Point patterns. example, deaths COVID, per day, Spain.  See Montero, Fernández-Avilés, Mateu (2015) details. work, focus geostatistical data.","code":""},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"what-do-we-need-to-carry-out-a-geostatistical-data-analysis-in-r","dir":"Articles","previous_headings":"What are spatial data?","what":"What do we need to carry out a geostatistical data analysis in R?","title":"Dealing with spatial data","text":"useful libraries going use throughout article :","code":"# geoR removed from CRAN (2022-05-19), install from archives  if (!require(\"geoR\")) {   packageurl <- \"https://cran.r-project.org/src/contrib/Archive/geoR/geoR_1.8-1.tar.gz\"   install.packages(packageurl, repos = NULL, type = \"source\") }  library(climaemet) # meteorological data library(mapSpain) # base maps of Spain library(classInt) # classification library(raster) # raster handling library(sf) # spatial shape handling library(sp) # spatial shape handling library(gstat) # for spatial interpolation library(geoR) # for spatial analysis library(dplyr) # data handling library(ggplot2) # for plots library(scatterplot3d) # for 3D visualization library(tidyverse) # collection of R packages designed for data science"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"where-can-we-find-geostatistical-data","dir":"Articles","previous_headings":"What are spatial data?","what":"Where can we find geostatistical data?","title":"Dealing with spatial data","text":"paper, going deal geostatistical data; specifically going model air temperature Spain 8 January 2021. download data climaemet (>= 1.0.0) package (Pizarro, Hernangómez, Fernández-Avilés 2021) R. climaemet allows us download climatic data Spanish Meteorological Agency (AEMET) directly using API. climaemet available CRAN:","code":"# Install climaemet install.packages(\"climaemet\")"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"api-key","dir":"Articles","previous_headings":"What are spatial data? > Where can we find geostatistical data?","what":"API Key","title":"Dealing with spatial data","text":"able download data AEMET also need free API key, can get :.","code":"library(climaemet) # Get api key from AEMET # browseURL(\"https://opendata.aemet.es/centrodedescargas/obtencionAPIKey\") # Use this function to register your API Key temporarily or permanently # YOUR_API_KEY  # aemet_api_key(\"YOUR_AEMET_API_KEY\")"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"what-is-the-structure-of-geostatistical-data","dir":"Articles","previous_headings":"","what":"What is the structure of geostatistical data?","title":"Dealing with spatial data","text":"Geostatistical data arises domain study fixed set \\(D\\) continuous. : () \\(Z(s)\\) can observed point domain (continuous); (ii) points \\(D\\) non-stochastic (fixed, \\(D\\) realizations spatial random function). First, take look characteristics stations. interested latitude longitude attributes. Preview AEMET stations Next, going extract data. select daily values 8 January 2021: Now, examine possible variables can analyzed. interested minimum daily temperature named tmin, although API also provides interesting information: step, select variable interest station. simplicity, remove Canary Islands exercise:  Now, let’s plot values choropleth map:","code":"stations <- aemet_stations() # Have a look on the data stations %>%   dplyr::select(name = nombre, latitude = latitud, longitude = longitud) %>%   head() %>%   knitr::kable(caption = \"Preview of AEMET stations\") # Select data date_select <- \"2021-01-08\" clim_data <- aemet_daily_clim(   start = date_select,   end = date_select,   return_sf = TRUE ) names(clim_data) #>  [1] \"fecha\"       \"indicativo\"  \"nombre\"      \"provincia\"   \"altitud\"     #>  [6] \"tmed\"        \"prec\"        \"tmin\"        \"horatmin\"    \"tmax\"        #> [11] \"horatmax\"    \"dir\"         \"velmedia\"    \"racha\"       \"horaracha\"   #> [16] \"sol\"         \"presMax\"     \"horaPresMax\" \"presMin\"     \"horaPresMin\" #> [21] \"geometry\" clim_data_clean <- clim_data %>%   # Exclude Islands from analysis   filter(!provincia %in% c(     \"LAS PALMAS\",     \"STA. CRUZ DE TENERIFE\"   )) %>%   dplyr::select(fecha, tmin) %>%   # Exclude NAs   filter(!is.na(tmin)) # Plot with outline of Spain ESP <- esp_get_ccaa(epsg = 4326) %>%   # Exclude Canary Islands from analysis   filter(ine.ccaa.name != \"Canarias\") %>%   # Group the whole country   st_union()  ggplot(ESP) +   geom_sf() +   geom_sf(data = clim_data_clean) +   theme_light() +   labs(     title = \"AEMET Stations in Spain\",     subtitle = \"excluding Canary Islands\"   ) +   theme(     plot.title = element_text(       size = 12,       face = \"bold\"     ),     plot.subtitle = element_text(       size = 8,       face = \"italic\"     )   ) # This would be common to all the paper br_paper <- c(-Inf, seq(-20, 20, 2.5), Inf) pal_paper <- hcl.colors(15, \"PuOr\", rev = TRUE) ggplot(clim_data_clean) +   geom_sf(     data = ESP,     fill = \"grey95\"   ) +   geom_sf(aes(fill = tmin),     shape = 21,     size = 6,     alpha = .7   ) +   labs(fill = \"Min. temp\") +   scale_fill_gradientn(     colours = pal_paper,     breaks = br_paper,     labels = function(x) {       paste0(x, \"º\")     },     guide = \"legend\"   ) +   theme_light() +   labs(     title = \"Minimum temperature\",     subtitle = format(as.Date(date_select), \"%d %b %Y\")   ) +   theme(     plot.title = element_text(       size = 12,       face = \"bold\"     ),     plot.subtitle = element_text(       size = 8,       face = \"italic\"     )   )"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"are-the-observations-independent-or-do-they-exhibit-spatial-dependence","dir":"Articles","previous_headings":"","what":"Are the observations independent or do they exhibit spatial dependence?","title":"Dealing with spatial data","text":"First Law Geography states Everything related everything else. near things related distant things (Tobler 1969). law basis fundamental concepts spatial dependence spatial autocorrelation. study, can observe positive spatial dependence: high temperature values found together south Spain low temperatures found together north Spain. next plot, divide minimum temperature quartiles visualize spatial distribution values.","code":"clim_data_clean %>%   st_drop_geometry() %>%   select(tmin) %>%   summarise_all(     funs(min, max, median, sd,       n = n(),       q25 = quantile(., .25),       q75 = quantile(., .75)     )   ) %>%   knitr::kable() bubble <- clim_data_clean %>%   arrange(desc(tmin)) # Create quartiles cuart <- classIntervals(bubble$tmin, n = 4) bubble$quart <- cut(bubble$tmin,   breaks = cuart$brks,   labels = FALSE ) ggplot(bubble) +   geom_sf(     aes(       size = quart,       fill = quart     ),     col = \"grey20\",     alpha = 0.7,     shape = 21   ) +   scale_size(     range = c(2, 8),     labels = function(x) paste0(\"Q\", x),     guide = guide_legend()   ) +   scale_fill_gradientn(     colours = pal_paper,     labels = function(x) paste0(\"Q\", x)   ) +   guides(fill = guide_legend(title = \"\")) +   labs(     size = \"\"   ) +   theme_light() +   labs(     title = \"Minimum temperature - Quartile map\",     subtitle = format(as.Date(date_select), \"%d %b %Y\")   ) +   theme(     plot.title = element_text(       size = 12,       face = \"bold\"     ),     plot.subtitle = element_text(       size = 8,       face = \"italic\"     )   )"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"preparing-the-data-as-a-spatial-object","dir":"Articles","previous_headings":"","what":"Preparing the data as a spatial object","title":"Dealing with spatial data","text":"important thing consider spatial analysis visualization coordinate reference system (CRS). exercise, choose project objects ETRS89 / UTM zone 30N EPSG:25830, provides projected x y values meters maximizes accuracy Spain.","code":"clim_data_utm <- st_transform(clim_data_clean, 25830) ESP_utm <- st_transform(ESP, 25830)"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"creating-a-grid-for-the-spatial-prediction","dir":"Articles","previous_headings":"Preparing the data as a spatial object","what":"Creating a grid for the spatial prediction","title":"Dealing with spatial data","text":"predict values locations measurements made, need create grid locations perform interpolation. grid composed equally spaced points whole (bounding box) Spain. squares stations, observation observations . However, use values cells contain stations interpolate data. additional steps must perform order prepare data spatial interpolation.","code":"# Create grid 5*5 km (25 km2) grd_sf <- st_bbox(ESP_utm) %>%   st_as_sfc() %>%   st_make_grid(     cellsize = 5000,     what = \"centers\"   ) # Convert to sp object - interpolation should be made with sp/raster grd <- as(grd_sf, \"Spatial\") %>%   as(\"SpatialPixels\") # Prepare the data. Change to sp for this analysis clim_data_clean_sp <- as(clim_data_utm, \"Spatial\") # Remove duplicate locations zd <- zerodist(clim_data_clean_sp) # Remove the duplicate rows and back to sf clim_data_clean_nodup_sp <- clim_data_clean_sp[-zd[, 2], ] clim_data_clean_nodup <- st_as_sf(clim_data_clean_nodup_sp)"},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"exploratory-spatial-data-analysis-esda","dir":"Articles","previous_headings":"Structural analysis of the spatial dependence","what":"Exploratory Spatial Data Analysis (ESDA)","title":"Dealing with spatial data","text":"Exploratory Data Analysis (EDA) first important step data modeling, ESDA also first step spatial statistics. data tell relationship X Y coordinates variable tmin ? order answer question, summarize spatial object observe summary : () number data points, (ii) coordinates, (iii) distance (iv) data. Second, generate several exploratory geostatistical plots. first quartile map, next two show tmin X Y coordinates last histogram tmin values.  Looking histogram, see data set Gaussian! Note kriging provides Best Linear Unbiased Predictor BLUP.","code":"library(geoR) clim_data_clean_nodup.geo <- clim_data_clean_nodup %>%   st_coordinates() %>%   as.data.frame() %>%   bind_cols(tmin = clim_data_clean_nodup$tmin) clim_data_clean_nodup.geoR <- as.geodata(   obj = clim_data_clean_nodup.geo,   coords.col = 1:2,   data.col = 3 ) summary(clim_data_clean_nodup.geoR) #> Number of data points: 211  #>  #> Coordinates summary #>             X       Y #> min  -13501.2 3903695 #> max 1117513.0 4858793 #>  #> Distance summary #>         min         max  #>    1125.199 1179604.366  #>  #> Data summary #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #> -14.90000  -4.60000  -0.50000  -0.62891   3.50000  13.60000 plot(clim_data_clean_nodup.geoR) ggplot(   clim_data_clean_nodup,   aes(x = tmin) ) +   geom_histogram(     aes(fill = cut(tmin, 15)),     col = \"grey40\",     binwidth = 1,     show.legend = FALSE   ) +   scale_fill_manual(values = pal_paper) +   labs(     y = \"n obs.\",     x = \"Min. temp (º)\"   ) +   theme_light() +   labs(     title = \"Histogram - Minimum temperature\",     subtitle = format(as.Date(date_select), \"%d %b %Y\")   ) +   theme(     plot.title = element_text(       size = 12,       face = \"bold\"     ),     plot.subtitle = element_text(       size = 8,       face = \"italic\"     )   )"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"the-semivariogram","dir":"Articles","previous_headings":"Structural analysis of the spatial dependence","what":"The semivariogram","title":"Dealing with spatial data","text":"semivariogram function keystone geostatistical prediction. , following Montero, Fernández-Avilés, Mateu (2015) formulate question: express function structure spatial dependence correlation present realization observed? answer question, known geostatistics literature structural analysis spatial dependence, , simply, structural analysis, key issue subsequent process optimal prediction (kriging), success kriging methods depends functions yielding information spatial dependence detected. functions referred covariance functions semivariograms, must meet series requisites. observed realization, practice, covariance functions semivariograms derived may satisfy requisites. reason, one theoretical models (also called valid models) comply must fitted . packages R carry geostatistical analysis “big two”: geoR (Ribeiro, Jr. Diggle 2001) gstat (Gräler, Pebesma, Heuvelink 2016). semivariogram , generally, non-decreasing monotone function, variability first increments random functions increases distance. going generate (omnidirectional) empirical semivariogram data, , second step, fitted theoretical one.  eyefit() interactive function fits parameters semivariogram eye. intuitive function play types parameters semivariogram. can help fit empirical semivariogram theoretical one. course, statistical methods fit semivariogram: Ordinary Least Squares (OLS), Weighted Least Squares (WLS), Maximum Likelihood (ML), Restricted Maximum Likelihood (REML). Run PC! geoR::eyefit() observed different types semivariograms type contains several parameters fitted. main types semivariograms : Spherical Exponential Gaussian Hole Effect K-Bessel J-Bessel Stable Mattern Circular Nugget graphical summary common spatial semivariogram models can found :  Regarding parameters, main ones : Sill: defined priori variance random function. Range: distance sill reached, defines threshold spatial dependence. Nugget: value semivariogram intercepts y-value. Theoretically, zero separation distance, semivariogram value 0. nugget effect can attributed measurement errors spatial sources variation distances smaller sampling interval . detailed study semivariogram function see Montero, Fernández-Avilés, Mateu (2015). Now, plot empirical semivariogram data () gstat::variogram check semivariogram four directions (0º, 45º, 90º, 135º).  can see semivariograms exhibit spatial dependence. choose 45º semivariogram. Now, fit empirical semivariogram theoretical semivariogram, included kriging equations. Note , case, object fit.var contains value estimated parameters. Finally, plot empirical theoretical semivariograms together.","code":"vario.geor <- variog(clim_data_clean_nodup.geoR, coords = clim_data_clean_nodup.geoR$coords, data = clim_data_clean_nodup.geoR$data, uvec = seq(0, 1000000, l = 25)) #> variog: computing omnidirectional variogram plot(vario.geor, pch = 20) eyefit(vario.geor) show.vgms() # Directional empirical semivariogramin gstat() vgm.dir <- variogram(tmin ~ 1, clim_data_clean_nodup_sp, cutoff = 1000000, alpha = c(0, 45, 90, 135)) plot(vgm.dir) vgm.dir.45 <- variogram(tmin ~ 1, clim_data_clean_nodup_sp, cutoff = 1000000, alpha = 45) fit.var <- fit.variogram(vgm.dir.45,   model = vgm(model = \"Sph\") ) fit.var #>   model   psill    range #> 1   Sph 47.7565 831345.6 # Plot empirical (dots) and theoretical (line) semivariograms plot(vgm.dir.45, fit.var, main = \"Empirical (dots) and theoretical (line) semivariograms \")"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"carrying-out-ordinary-kriging","dir":"Articles","previous_headings":"","what":"Carrying out Ordinary Kriging","title":"Dealing with spatial data","text":"theoretical semivariogram chosen, ready spatial prediction. method geostatistics uses spatial prediction termed kriging honor South African mining engineer, Daniel Gerhardus Krige. According Montero, Fernández-Avilés, Mateu (2015), kriging aims predict value random function, \\(Z(s)\\), one non-observed points (blocks) collection data observed \\(n\\) points (blocks case block prediction) domain \\(D\\), provides best linear unbiased predictor (BLUP) regionalized variable study non-observed points blocks different kinds kriging depend characteristics spatial process: simple, ordinary universal kriging (external drift kriging), kriging local neighborhood, point kriging kriging block mean values conditional (Gaussian indicator) simulation equivalents kriging varieties. work deal ordinary kriging, widely-used kriging method. According Wackernagel (1995) serves estimate value point region variogram known, using data neighborhood estimation location. study, perform ordinary kriging (OK). Now, plot kriging prediction:  , variance prediction:  Lastly, plot variance prediction together:  can seen areas near observed points prediction variance minimal; contrary, areas monitoring stations can found prediction variance bigger.","code":"kriged <- krige(tmin ~ 1,   clim_data_clean_nodup_sp,   grd,   model = fit.var ) #> [using ordinary kriging] kriged_df <- as.data.frame(kriged, xy = TRUE, na.rm = TRUE) pred <- ggplot() +   geom_tile(     data = kriged_df,     aes(       x = coords.x1,       y = coords.x2,       fill = var1.pred     )   ) +   geom_sf(     data = ESP_utm,     col = \"black\",     fill = NA   ) +   scale_fill_gradientn(     colours = pal_paper,     breaks = br_paper,     labels = function(x) {       paste0(x, \"º\")     },     guide = guide_legend(       reverse = TRUE,       title = \"Min. temp\\n(kriged)\"     )   ) +   theme_light() +   labs(     title = \"Ordinary Kriging - Minimum temperature\",     subtitle = format(as.Date(date_select), \"%d %b %Y\")   ) +   theme(     panel.background = element_blank(),     panel.grid = element_blank(),     panel.border = element_blank(),     axis.title = element_blank(),     plot.title = element_text(       size = 12,       face = \"bold\"     ),     plot.subtitle = element_text(       size = 8,       face = \"italic\"     )   )  pred ggplot(kriged_df) +   geom_contour_filled(aes(coords.x1, coords.x2, z = var1.var),     breaks = c(0, 1.5, 3, 6, 8, 10, 15, 20, max(kriged_df$var1.var +       1))   ) +   geom_sf(     data = ESP_utm,     col = \"black\",     fill = NA   ) +   geom_sf(     data = clim_data_clean_nodup,     col = \"blue\",     shape = 4   ) +   scale_fill_manual( # Special palette     values = c(       \"springgreen\",       hcl.colors(8, \"PuRd\",         rev = TRUE       )     ),     guide = guide_legend(       title = \"Variance\"     )   ) +   theme_light() +   labs(     title = \"OK prediction variance - Minimum temperature\",     subtitle = format(as.Date(date_select), \"%d %b %Y\")   ) +   theme(     panel.background = element_blank(),     panel.grid = element_blank(),     panel.border = element_blank(),     axis.title = element_blank(),     plot.title = element_text(       size = 12,       face = \"bold\"     ),     plot.subtitle = element_text(       size = 8,       face = \"italic\"     )   ) pred +   geom_sf(     data = clim_data_clean_nodup,     col = \"darkred\",     shape = 20   ) +   geom_contour(     data = kriged_df, breaks = c(0, 2, 10, 15, 20),     aes(coords.x1, coords.x2, z = var1.var),     color = \"darkred\"   ) +   labs(     title = \"OK: Prediction and variance prediction\",     caption = \"Points represent climate stations.\\nLines represent cluster of variances\"   )"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"comparing-ordinary-kriging-with-inverse-distance-weighting","dir":"Articles","previous_headings":"","what":"Comparing Ordinary Kriging with Inverse Distance Weighting","title":"Dealing with spatial data","text":"section, compare Ordinary Kriging (OK) vs. Inverse Distance Weighting (IDW) method, one several approaches perform spatial interpolation. recommend article perform analysis R. Note IDW deterministic interpolation technique creates surfaces sample points using mathematical functions (assumed correlation can defined reverse distance function every point neighboring points). contrary, stochastics interpolation techniques, like kriging, utilize statistical properties sample points (based variogram gives spatial structure studied variable). Moreover, kriging provides error prediction map.","code":"idw <- idw(tmin ~ 1,   clim_data_clean_nodup_sp,   newdata = grd,   idp = 2.0 ) #> [inverse distance weighted interpolation] idw_df <- as.data.frame(idw, xy = TRUE, na.rm = TRUE) # Prepare for facetting idw_facet <- idw_df %>%   mutate(method = \"IDW\") all_methods <- kriged_df %>%   mutate(method = \"Kriging\") %>%   bind_rows(idw_facet) # Reorder for facets all_methods$method <- factor(all_methods$method, levels = c(\"Kriging\", \"IDW\"))  # Plot and compare ggplot(all_methods) +   geom_tile(     aes(       x = coords.x1,       y = coords.x2,       fill = var1.pred     )   ) +   facet_wrap(vars(method),     ncol = 2   ) +   geom_sf(     data = ESP_utm,     col = \"black\",     fill = NA   ) +   scale_fill_gradientn(     colours = pal_paper,     n.breaks = 10,     labels = function(x) {       paste0(x, \"º\")     },     guide = guide_legend(       title = \"Min. temp\",       direction = \"horizontal\",       keyheight = 0.5,       keywidth = 2,       title.position = \"top\",       title.hjust = 0.5,       label.hjust = .5,       nrow = 1,       byrow = TRUE,       reverse = FALSE,       label.position = \"bottom\"     )   ) +   theme_void() +   labs(     title = \"OK vs IDW\",     subtitle = format(as.Date(date_select), \"%d %b %Y\")   ) +   theme(     panel.background = element_blank(),     panel.grid = element_blank(),     panel.border = element_blank(),     axis.title = element_blank(),     plot.title = element_text(       size = 12,       face = \"bold\"     ),     plot.subtitle = element_text(       size = 8,       face = \"italic\"     ),     legend.text = element_text(       size = 10     ),     legend.title = element_text(       size = 11     ),     legend.position = \"bottom\"   )"},{"path":"https://ropenspain.github.io/climaemet/articles/x01_dealing_spatial.html","id":"cross-validation","dir":"Articles","previous_headings":"Comparing Ordinary Kriging with Inverse Distance Weighting","what":"Cross-validation","title":"Dealing with spatial data","text":"compare two interpolation methods, OK IDW, carry cross-validation (CV) leave-one-process. Moreover, CV widely-used procedure validate semivariogram model selected kriging interpolation. Now, plot leave-one-cross validation residuals observe residuals OK smaller OK.  Moreover, calculating diagnostic statistics results good way select best interpolation method. error-based measures used study include root-mean-square error (RMSE) mean error (). , expected, can see OK yields better predictions IDW.","code":"## Cross-validation: OK xv.ok <- krige.cv(tmin ~ 1, clim_data_clean_nodup_sp, fit.var) xv.ok #> class       : SpatialPointsDataFrame  #> features    : 211  #> extent      : -13501.2, 1117513, 3903695, 4858793  (xmin, xmax, ymin, ymax) #> crs         : +proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs  #> variables   : 6 #> names       :         var1.pred,          var1.var, observed,          residual,            zscore, fold  #> min values  : -11.3091244097324, 0.188043815427391,    -14.9, -7.96232597016259, -5.06416738817237,    1  #> max values  :  11.8629128400332,  18.8314578850295,     13.6,   6.9343814018665,  4.51858892424921,  211 # Cross-validation: IDW xv.idw <- krige.cv(tmin ~ 1, clim_data_clean_nodup_sp) xv.idw #> class       : SpatialPointsDataFrame  #> features    : 211  #> extent      : -13501.2, 1117513, 3903695, 4858793  (xmin, xmax, ymin, ymax) #> crs         : +proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs  #> variables   : 6 #> names       :         var1.pred, var1.var, observed,          residual, zscore, fold  #> min values  : -8.32676495938665,       NA,    -14.9, -10.0347196182415,     NA,    1  #> max values  :  10.0226030178201,       NA,     13.6,  10.2821334250692,     NA,  211 # Create unique scale allvalues <- unique(c(xv.ok$residual, xv.idw$residual))  keys <- classIntervals(allvalues, n = 5)$brks   sp::bubble(xv.ok, \"residual\", main = \"Tmin: leave-one-out cross validation residuals with OK\", key.entries = keys) sp::bubble(xv.idw, \"residual\", main = \"Tmin: leave-one-out cross validation residuals with IDW\", key.entries = keys) ME <- function(observed, predicted) {   mean((predicted - observed), na.rm = TRUE) }  RMSE <- function(observed, predicted) {   sqrt(mean((predicted - observed)^2, na.rm = TRUE)) } # OK Diagnostic statistics ME.OK <- ME(xv.ok$observed, xv.ok$var1.pred) RMSE.OK <- RMSE(xv.ok$observed, xv.ok$var1.pred)  # IDw Diagnostic statistics ME.IDW <- ME(xv.idw$observed, xv.idw$var1.pred) RMSE.IDW <- RMSE(xv.idw$observed, xv.idw$var1.pred)"},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Manuel Pizarro. Author, copyright holder. Diego Hernangómez. Author, maintainer.            rOpenSpain Gema Fernández-Avilés. Author.","code":""},{"path":"https://ropenspain.github.io/climaemet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pizarro M, Hernangómez D, Fernández-Avilés G (2021). climaemet: Climate AEMET Tools. doi:10.5281/zenodo.5205573, https://hdl.handle.net/10261/250390.","code":"@Manual{R-climaemet,   title = {{climaemet}: Climate {AEMET} Tools},   author = {Manuel Pizarro and Diego Hernangómez and Gema Fernández-Avilés},   abstract = {The goal of climaemet is to serve as an interface to download the climatic data of the Spanish Meteorological Agency (AEMET) directly from R using their API (https://opendata.aemet.es/) and create scientific graphs (climate charts, trend analysis of climate time series, temperature and precipitation anomalies maps, “warming stripes” graphics, climatograms, etc.).},   year = {2021},   month = {8},   url = {https://hdl.handle.net/10261/250390},   doi = {10.5281/zenodo.5205573},   keywords = {Climate, Rcran,  Tools, Graphics, Interpolation, Maps}, }"},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"climaemet-","dir":"","previous_headings":"","what":"Climate AEMET Tools","title":"Climate AEMET Tools","text":"goal climaemet serve interface download climatic data Spanish Meteorological Agency (AEMET) directly R using API create scientific graphs (climate charts, trend analysis climate time series, temperature precipitation anomalies maps, “warming stripes” graphics, climatograms, etc.). Browse manual vignettes https://ropenspain.github.io/climaemet/.","code":""},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"aemet-open-data","dir":"","previous_headings":"","what":"AEMET Open Data","title":"Climate AEMET Tools","text":"AEMET OpenData REST API developed AEMET allows dissemination reuse Agency’s meteorological climatological information. see details visit: https://opendata.aemet.es/centrodedescargas/inicio","code":""},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"license-for-the-original-data","dir":"","previous_headings":"","what":"License for the original data","title":"Climate AEMET Tools","text":"Information prepared Spanish Meteorological Agency (© AEMET). can read . summary usage data interpreted : People can use freely data. mention AEMET collector original data every situation except using data privately individually. AEMET makes warranty accuracy completeness data. data provided “” basis. AEMET responsible damage loss derived interpretation use data.","code":""},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Climate AEMET Tools","text":"can install released version climaemet CRAN : can install developing version climaemet using r-universe: Alternatively, can install developing version climaemet :","code":"install.packages(\"climaemet\") # Enable this universe options(repos = c(   ropenspain = \"https://ropenspain.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" ))  install.packages(\"climaemet\") library(remotes) install_github(\"ropenspain/climaemet\")"},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"api-key","dir":"","previous_headings":"","what":"API key","title":"Climate AEMET Tools","text":"able download data AEMET need free API key can get .","code":"library(climaemet)  ## Get api key from AEMET browseURL(\"https://opendata.aemet.es/centrodedescargas/obtencionAPIKey\")  ## Use this function to register your API Key temporarly or permanently aemet_api_key(\"MY API KEY\")"},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"changes-on-v100","dir":"","previous_headings":"API key","what":"Changes on v1.0.0!","title":"Climate AEMET Tools","text":"Now apikey parameter functions deprecated. may need set API Key globally using aemet_api_key(). Note need also remove apikey parameter old codes.","code":""},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"now-climaemet-is-tidy","dir":"","previous_headings":"","what":"Now climaemet is tidy…","title":"Climate AEMET Tools","text":"v1.0.0 onward, climaemet provides results tibble format. Also, functions try guess correct format fields (.e. something Date/Hour now hour, numbers parsed double, etc.).","code":"library(climaemet)  # See a tibble in action  aemet_last_obs(\"9434\") #> # A tibble: 24 × 25 #>    idema   lon fint                 prec   alt  vmax    vv    dv   lat  dmax #>    <chr> <dbl> <dttm>              <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 9434  -1.00 2022-05-18 07:00:00     0   249   3.1   1.8   303  41.7   340 #>  2 9434  -1.00 2022-05-18 08:00:00     0   249   3.9   1.8   305  41.7   310 #>  3 9434  -1.00 2022-05-18 09:00:00     0   249   3.3   1.3   330  41.7   323 #>  4 9434  -1.00 2022-05-18 10:00:00     0   249   4.1   1.6   123  41.7   143 #>  5 9434  -1.00 2022-05-18 11:00:00     0   249   4.7   2.3    76  41.7    93 #>  6 9434  -1.00 2022-05-18 12:00:00     0   249   6.9   4.3   109  41.7   120 #>  7 9434  -1.00 2022-05-18 13:00:00     0   249   7.2   4.6   112  41.7   110 #>  8 9434  -1.00 2022-05-18 14:00:00     0   249   7.7   3.5    84  41.7    95 #>  9 9434  -1.00 2022-05-18 15:00:00     0   249   8.1   4.5   107  41.7   105 #> 10 9434  -1.00 2022-05-18 16:00:00     0   249   7.3   4.7   113  41.7   118 #> # … with 14 more rows, and 15 more variables: ubi <chr>, pres <dbl>, hr <dbl>, #> #   stdvv <dbl>, ts <dbl>, pres_nmar <dbl>, tamin <dbl>, ta <dbl>, tamax <dbl>, #> #   tpr <dbl>, stddv <dbl>, inso <dbl>, tss5cm <dbl>, pacutp <dbl>, #> #   tss20cm <dbl>"},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"examples","dir":"","previous_headings":"Now climaemet is tidy…","what":"Examples","title":"Climate AEMET Tools","text":"package provides several functions access data API. can find examples: can also draw “warming stripes” graph downloaded data weather station. functions returns ggplot2 plots:  Furthermore, can draw well-known Walter & Lieth climatic diagram weather station specified period time:  Additionally, may interested drawing wind speed direction period time data downloaded weather station.:","code":"## Get AEMET stations stations <- aemet_stations() # Need to have the API Key registered  knitr::kable(head(stations)) station <- \"9434\" # Zaragoza Aeropuerto  ## Get last observation values for a station data_observation <- aemet_last_obs(station)  knitr::kable(head(data_observation)) ## Get daily/annual climatology values for a station data_daily <-   aemet_daily_clim(station, start = \"2020-01-01\", end = \"2020-12-31\")  knitr::kable(head(data_daily)) ## Get monthly/annual climatology values for a station data_monthly <- aemet_monthly_clim(station, year = 2000) knitr::kable(head(data_monthly)) ## Get recorded extreme values of temperature for a station data_extremes <- aemet_extremes_clim(station, parameter = \"T\") knitr::kable(head(data_extremes)) # Plot a climate stripes graph for a period of years for a station  library(ggplot2)  climatestripes_station(\"9434\", start = 1980, end = 2020) +   theme(plot.title = element_text(size = 10)) # Plot of a Walter & Lieth climatic diagram (normal climatology values) for a station climatogram_normal(\"9434\", labels = \"en\") # Plot a windrose showing the wind speed and direction for a station over a days period. windrose_days(   \"9434\",   start = \"2010-01-01\",   end = \"2020-12-31\",   n_speeds = 5,   speed_cuts = c(2.5, 5, 7.5, 10, 12.5, 15) ) +   theme(plot.title = element_text(size = 10))"},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"-and-spatial","dir":"","previous_headings":"","what":"… and spatial!","title":"Climate AEMET Tools","text":"Another major change v1.0.0 ability return information spatial sf format, using return_sf = TRUE. coordinate reference system (CRS) used EPSG 4326, correspond World Geodetic System (WGS) return coordinates latitude/longitude (unprojected coordinates):","code":"# You would need to install `sf` if not installed yet # run install.packages(\"sf\") for installation  library(ggplot2) library(dplyr)  all_stations <- aemet_last_obs(return_sf = TRUE) # Last hour all_last <-   all_stations %>% filter(fint == all_stations[[\"fint\"]][1])  last_hour <- max(all_last$fint)   ggplot(all_last) +   geom_sf(aes(colour = ta),     shape = 19,     size = 2,     alpha = 0.5   ) +   labs(     title = \"Temperature in Spain\",     subtitle = last_hour,     color = \"Max temp.\\n(celsius)\",     caption = \"Source: AEMET\"   ) +   scale_colour_gradientn(     colours = hcl.colors(10, \"RdBu\", rev = TRUE, alpha = 0.5),     guide = \"legend\"   ) +   guides(colour = guide_legend(n.breaks = 10)) +   theme_bw() +   theme(     panel.border = element_blank(),     plot.title = element_text(face = \"bold\"),     plot.subtitle = element_text(face = \"italic\")   )"},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Climate AEMET Tools","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Climate AEMET Tools","text":"Using climaemet paper writing?. Consider citing : Pizarro M, Hernangómez D, Fernández-Avilés G (2021). climaemet: Climate AEMET Tools. doi:10.5281/zenodo.5205573 https://doi.org/10.5281/zenodo.5205573, https://hdl.handle.net/10261/250390. BibTeX entry LaTeX users :","code":"@Manual{R-climaemet,   title = {{climaemet}: Climate {AEMET} Tools},   author = {Manuel Pizarro and Diego Hernangómez and Gema Fernández-Avilés},   abstract = {The goal of climaemet is to serve as an interface to download the climatic data of the Spanish Meteorological Agency (AEMET) directly from R using their API (https://opendata.aemet.es/) and create scientific graphs (climate charts, trend analysis of climate time series, temperature and precipitation anomalies maps, “warming stripes” graphics, climatograms, etc.).},   year = {2021},   month = {8},   url = {https://hdl.handle.net/10261/250390},   doi = {10.5281/zenodo.5205573},   keywords = {Climate, Rcran,  Tools, Graphics, Interpolation, Maps}, }"},{"path":"https://ropenspain.github.io/climaemet/index.html","id":"links","dir":"","previous_headings":"","what":"Links","title":"Climate AEMET Tools","text":"Download CRAN https://cran.r-project.org/package=climaemet Browse source code https://github.com/ropenspain/climaemet","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Install an AEMET API Key — aemet_api_key","title":"Install an AEMET API Key — aemet_api_key","text":"function store AEMET API key local machine can called securely without stored code. installed key, can called time typing Sys.getenv(\"AEMET_API_KEY\") can used package functions simply typing AEMET_API_KEY. Alternatively, can install API Key manually: Run Sys.setenv(AEMET_API_KEY = \"Your_Key\"). need run command session (Similar install = FALSE). Write line .Renviron file: AEMET_API_KEY = \"Your_Key\" ( behavior install = TRUE). store API key permanently.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install an AEMET API Key — aemet_api_key","text":"","code":"aemet_api_key(apikey, overwrite = FALSE, install = FALSE)"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install an AEMET API Key — aemet_api_key","text":"apikey API key provided AEMET formatted quotes. key can acquired https://opendata.aemet.es/centrodedescargas/inicio. overwrite set TRUE, overwrite existing AEMET_API_KEY already local machine. install TRUE, install key local machine use future sessions.  Defaults FALSE.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install an AEMET API Key — aemet_api_key","text":"None","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_api_key.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Install an AEMET API Key — aemet_api_key","text":"locate API Key local machine, run rappdirs::user_cache_dir(\"climaemet\", \"R\").","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install an AEMET API Key — aemet_api_key","text":"","code":"# Don't run these examples!  if (FALSE) {   aemet_api_key(\"111111abc\", install = TRUE)    # You can check it with:   Sys.getenv(\"AEMET_API_KEY\") }  if (FALSE) {   # If you need to overwrite an existing key:   aemet_api_key(\"222222abc\", overwrite = TRUE, install = TRUE)    # You can check it with:   Sys.getenv(\"AEMET_API_KEY\") }"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_daily.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily/annual climatology values — aemet_daily_clim","title":"Daily/annual climatology values — aemet_daily_clim","text":"Get climatology values station available stations. Note aemet_daily_period() aemet_daily_period_all() shortcuts aemet_daily_clim().","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily/annual climatology values — aemet_daily_clim","text":"","code":"aemet_daily_clim(   station = \"all\",   start = Sys.Date() - 7,   end = Sys.Date(),   verbose = FALSE,   return_sf = FALSE )  aemet_daily_period(   station,   start = 2020,   end = 2020,   verbose = FALSE,   return_sf = FALSE )  aemet_daily_period_all(   start = 2020,   end = 2020,   verbose = FALSE,   return_sf = FALSE )"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_daily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Daily/annual climatology values — aemet_daily_clim","text":"station Character string station identifier code(s) (see aemet_stations()) \"\" stations. start, end Character string start end date. See Details. verbose Logical TRUE/FALSE. Provides information flow information client server. return_sf Logical TRUE FALSE. function return sf spatial object? FALSE (default value) returns tibble. Note need sf package installed.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_daily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Daily/annual climatology values — aemet_daily_clim","text":"tibble sf object","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_daily.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Daily/annual climatology values — aemet_daily_clim","text":"start end parameters : aemet_daily_clim(): Date object string format: YYYY-MM-DD (2020-12-31) coercible .Date(). aemet_daily_period() aemet_daily_period_all(): string representing year(s) extracted: \"2020\", \"2018\".","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_daily.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Daily/annual climatology values — aemet_daily_clim","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_daily.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily/annual climatology values — aemet_daily_clim","text":"","code":"library(tibble) obs <- aemet_daily_clim(c(\"9434\", \"3195\")) glimpse(obs) #> Rows: 8 #> Columns: 20 #> $ fecha       <date> 2022-05-12, 2022-05-13, 2022-05-14, 2022-05-15, 2022-05-1… #> $ indicativo  <chr> \"9434\", \"9434\", \"9434\", \"9434\", \"3195\", \"3195\", \"3195\", \"3… #> $ nombre      <chr> \"ZARAGOZA, AEROPUERTO\", \"ZARAGOZA, AEROPUERTO\", \"ZARAGOZA,… #> $ provincia   <chr> \"ZARAGOZA\", \"ZARAGOZA\", \"ZARAGOZA\", \"ZARAGOZA\", \"MADRID\", … #> $ altitud     <dbl> 249, 249, 249, 249, 667, 667, 667, 667 #> $ tmed        <dbl> 22.4, 22.2, 22.6, 22.9, 22.0, 22.2, 22.7, 20.8 #> $ prec        <dbl> 0.0, 0.0, 4.8, 0.0, 0.0, 0.0, 0.8, 0.0 #> $ tmin        <dbl> 16.0, 13.8, 15.8, 15.8, 16.8, 15.3, 17.5, 16.2 #> $ horatmin    <time> 05:30:00, 05:20:00, 04:50:00, 05:10:00, 05:20:00, 02:50:00… #> $ tmax        <dbl> 28.8, 30.7, 29.3, 30.0, 27.2, 29.2, 27.9, 25.3 #> $ horatmax    <time> 14:50:00, 16:10:00, 12:40:00, 14:00:00, 14:20:00, 13:50:00… #> $ dir         <dbl> 12, 34, 28, 10, 24, 15, 23, 22 #> $ velmedia    <dbl> 4.7, 1.1, 3.3, 3.1, 1.9, 1.7, 1.1, 2.5 #> $ racha       <dbl> 10.0, 4.2, 14.7, 7.8, 7.2, 6.4, 13.1, 10.0 #> $ horaracha   <time> 17:20:00, 11:50:00, 15:40:00, 09:10:00, 16:50:00, 14:20:00… #> $ sol         <dbl> 11.7, 12.5, 7.2, 8.2, NA, NA, NA, NA #> $ presMax     <dbl> 991.0, 992.1, 989.4, 986.9, 943.5, 944.8, 942.2, 942.1 #> $ horaPresMax <chr> \"07\", \"07\", \"06\", \"Varias\", \"24\", \"09\", \"10\", \"23\" #> $ presMin     <dbl> 987.2, 987.5, 984.7, 983.1, 940.8, 941.5, 937.0, 937.7 #> $ horaPresMin <chr> \"16\", \"17\", \"15\", \"17\", \"Varias\", \"Varias\", \"18\", \"Varias\""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_detect_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an AEMET API Key is present for the current session — aemet_detect_api_key","title":"Check if an AEMET API Key is present for the current session — aemet_detect_api_key","text":"function detect API Key available session: API Key already set environment variable preserved environment variable set stored permanently API Key using aemet_api_key(), latter loaded.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_detect_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an AEMET API Key is present for the current session — aemet_detect_api_key","text":"","code":"aemet_detect_api_key(...)"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_detect_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an AEMET API Key is present for the current session — aemet_detect_api_key","text":"... Ignored","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_detect_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an AEMET API Key is present for the current session — aemet_detect_api_key","text":"TRUE FALSE","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_detect_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an AEMET API Key is present for the current session — aemet_detect_api_key","text":"","code":"aemet_detect_api_key() #> [1] TRUE"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_extremes_clim.html","id":null,"dir":"Reference","previous_headings":"","what":"Extreme values for a station — aemet_extremes_clim","title":"Extreme values for a station — aemet_extremes_clim","text":"Get recorded extreme values station.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_extremes_clim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme values for a station — aemet_extremes_clim","text":"","code":"aemet_extremes_clim(   station = NULL,   parameter = \"T\",   verbose = FALSE,   return_sf = FALSE )"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_extremes_clim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extreme values for a station — aemet_extremes_clim","text":"station Character string station identifier code(s) (see aemet_stations()) parameter Character string temperature (\"T\"), precipitation (\"P\") wind (\"V\") parameter. verbose Logical TRUE/FALSE. Provides information flow information client server. return_sf Logical TRUE FALSE. function return sf spatial object? FALSE (default value) returns tibble. Note need sf package installed.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_extremes_clim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extreme values for a station — aemet_extremes_clim","text":"tibble sf object","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_extremes_clim.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Extreme values for a station — aemet_extremes_clim","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_extremes_clim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extreme values for a station — aemet_extremes_clim","text":"","code":"library(tibble) obs <- aemet_extremes_clim(c(\"9434\", \"3195\")) glimpse(obs) #> Rows: 26 #> Columns: 24 #> $ indicativo  <chr> \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9… #> $ nombre      <chr> \"ZARAGOZA, AEROPUERTO\", \"ZARAGOZA, AEROPUERTO\", \"ZARAGOZA,… #> $ ubicacion   <chr> \"ZARAGOZA\", \"ZARAGOZA\", \"ZARAGOZA\", \"ZARAGOZA\", \"ZARAGOZA\"… #> $ codigo      <chr> \"023000\", \"023000\", \"023000\", \"023000\", \"023000\", \"023000\"… #> $ temMin      <dbl> -104, -114, -63, -24, 5, 52, 80, 84, 48, 6, -56, -95, -114… #> $ diaMin      <dbl> 4, 5, 9, 3, 4, 11, 18, 17, 30, 25, 22, 25, 5, 16, 12, 1, 1… #> $ anioMin     <dbl> 1971, 1963, 1964, 1967, 1967, 1971, 1965, 1968, 1974, 1974… #> $ mesMin      <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1… #> $ temMax      <dbl> 206, 255, 283, 324, 365, 432, 445, 428, 392, 320, 284, 220… #> $ diaMax      <dbl> 8, 27, 19, 9, 29, 29, 7, 26, 16, 1, 9, 8, 7, 27, 28, 30, 2… #> $ anioMax     <dbl> 2016, 2019, 1957, 2011, 2001, 2019, 2015, 2010, 1964, 2013… #> $ mesMax      <dbl> 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8… #> $ temMedBaja  <dbl> 29, 15, 71, 104, 132, 182, 213, 216, 169, 117, 73, 32, 15,… #> $ anioMedBaja <dbl> 1953, 1956, 1971, 1986, 1984, 1953, 1977, 1977, 1972, 1974… #> $ mesMedBaja  <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… #> $ temMedAlta  <dbl> 97, 121, 146, 174, 208, 266, 282, 279, 241, 195, 131, 101,… #> $ anioMedAlta <dbl> 2016, 1990, 2001, 2014, 2017, 2003, 2015, 2003, 1987, 2014… #> $ mesMedAlta  <dbl> 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7… #> $ temMedMin   <dbl> -12, -30, 19, 54, 85, 126, 150, 151, 110, 72, 27, -21, -30… #> $ anioMedMin  <dbl> 1957, 1956, 1973, 1970, 1984, 1969, 1954, 1954, 1965, 1974… #> $ mesMedMin   <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… #> $ temMedMax   <dbl> 135, 180, 207, 237, 278, 338, 358, 355, 307, 256, 172, 137… #> $ anioMedMax  <dbl> 2016, 1990, 1997, 2014, 2017, 2003, 2015, 2003, 1987, 2014… #> $ mesMedMax   <dbl> 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7…"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_last_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Last observation values for a station — aemet_last_obs","title":"Last observation values for a station — aemet_last_obs","text":"Get last observation values station.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_last_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Last observation values for a station — aemet_last_obs","text":"","code":"aemet_last_obs(station = \"all\", verbose = FALSE, return_sf = FALSE)"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_last_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Last observation values for a station — aemet_last_obs","text":"station Character string station identifier code(s) (see aemet_stations()) \"\" stations. verbose Logical TRUE/FALSE. Provides information flow information client server. return_sf Logical TRUE FALSE. function return sf spatial object? FALSE (default value) returns tibble. Note need sf package installed.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_last_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Last observation values for a station — aemet_last_obs","text":"tibble sf object.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_last_obs.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Last observation values for a station — aemet_last_obs","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_last_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Last observation values for a station — aemet_last_obs","text":"","code":"library(tibble) obs <- aemet_last_obs(c(\"9434\", \"3195\")) glimpse(obs) #> Rows: 46 #> Columns: 26 #> $ idema     <chr> \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"943… #> $ lon       <dbl> -1.004167, -1.004167, -1.004167, -1.004167, -1.004167, -1.00… #> $ fint      <dttm> 2022-05-18 08:00:00, 2022-05-18 09:00:00, 2022-05-18 10:00:… #> $ prec      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ alt       <dbl> 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, … #> $ vmax      <dbl> 3.9, 3.3, 4.1, 4.7, 6.9, 7.2, 7.7, 8.1, 7.3, 9.1, 11.1, 11.1… #> $ vv        <dbl> 1.8, 1.3, 1.6, 2.3, 4.3, 4.6, 3.5, 4.5, 4.7, 6.1, 7.9, 7.0, … #> $ dv        <dbl> 305, 330, 123, 76, 109, 112, 84, 107, 113, 118, 113, 119, 10… #> $ lat       <dbl> 41.66056, 41.66056, 41.66056, 41.66056, 41.66056, 41.66056, … #> $ dmax      <dbl> 310, 323, 143, 93, 120, 110, 95, 105, 118, 115, 100, 115, 11… #> $ ubi       <chr> \"ZARAGOZA  AEROPUERTO\", \"ZARAGOZA  AEROPUERTO\", \"ZARAGOZA  A… #> $ pres      <dbl> 989.9, 989.5, 989.0, 988.3, 987.4, 986.5, 985.9, 985.2, 984.… #> $ hr        <dbl> 52, 47, 42, 36, 33, 30, 21, 24, 26, 30, 34, 36, 38, 40, 41, … #> $ stdvv     <dbl> 0.5, 0.4, 0.6, 0.7, 1.0, 1.0, 0.8, 1.4, 0.7, 1.1, 1.2, 1.3, … #> $ ts        <dbl> 32.4, 34.2, 34.8, 36.7, 36.6, 37.8, 36.2, 39.2, 36.8, 33.8, … #> $ pres_nmar <dbl> 1018.8, 1018.1, 1017.4, 1016.5, 1015.4, 1014.4, 1013.8, 1012… #> $ tamin     <dbl> 21.6, 23.1, 25.6, 27.7, 30.0, 31.4, 32.7, 32.9, 33.7, 32.5, … #> $ ta        <dbl> 23.1, 25.6, 27.7, 30.0, 31.4, 32.7, 33.2, 34.1, 33.8, 32.6, … #> $ tamax     <dbl> 23.1, 25.6, 27.7, 30.0, 31.4, 32.7, 33.8, 34.3, 34.1, 33.8, … #> $ tpr       <dbl> 12.7, 13.5, 13.7, 13.3, 13.2, 12.8, 8.0, 10.6, 11.7, 12.7, 1… #> $ stddv     <dbl> 16, 79, 47, 22, 14, 14, 14, 15, 9, 10, 8, 9, 10, 10, 16, 9, … #> $ inso      <dbl> 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 51.1, 49.2, 57.9, 60.0, … #> $ tss5cm    <dbl> 26.0, 27.7, 29.6, 31.2, 33.1, 34.3, 35.2, 35.1, 35.2, 34.7, … #> $ pacutp    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ tss20cm   <dbl> 25.9, 25.7, 25.8, 26.0, 26.3, 26.8, 27.3, 27.9, 28.4, 28.9, … #> $ rviento   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_monthly.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly/annual climatology — aemet_monthly","title":"Monthly/annual climatology — aemet_monthly","text":"Get monthly/annual climatology values station stations. aemet_monthly_period() aemet_monthly_period_all() allows requests span several years.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_monthly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly/annual climatology — aemet_monthly","text":"","code":"aemet_monthly_clim(   station = NULL,   year = 2020,   verbose = FALSE,   return_sf = FALSE )  aemet_monthly_period(   station = NULL,   start = 2018,   end = 2020,   verbose = FALSE,   return_sf = FALSE )  aemet_monthly_period_all(   start = 2019,   end = 2020,   verbose = FALSE,   return_sf = FALSE )"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_monthly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monthly/annual climatology — aemet_monthly","text":"station Character string station identifier code(s) (see aemet_stations()) year Numeric value date (format: YYYY). verbose Logical TRUE/FALSE. Provides information flow information client server. return_sf Logical TRUE FALSE. function return sf spatial object? FALSE (default value) returns tibble. Note need sf package installed. start Numeric value start year (format: YYYY). end Numeric value end year (format: YYYY).","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_monthly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monthly/annual climatology — aemet_monthly","text":"tibble sf object","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_monthly.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Monthly/annual climatology — aemet_monthly","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_monthly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monthly/annual climatology — aemet_monthly","text":"","code":"library(tibble) obs <- aemet_monthly_clim(station = c(\"9434\", \"3195\"), year = 2000) glimpse(obs) #> Rows: 26 #> Columns: 45 #> $ fecha      <chr> \"2000-1\", \"2000-2\", \"2000-3\", \"2000-4\", \"2000-5\", \"2000-6\",… #> $ indicativo <chr> \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"94… #> $ p_max      <chr> \"8.0(15)\", \"0.0(--)\", \"5.4(22)\", \"22.2(26)\", \"23.4(05)\", \"1… #> $ n_cub      <dbl> 8, 0, 4, 8, 6, 2, 1, 1, 0, 6, 6, 7, 49, 5, 1, 4, 14, 8, 0, … #> $ hr         <dbl> 77, 60, 58, 61, 61, 57, 48, 53, 53, 67, 73, 78, 62, 75, 62,… #> $ n_gra      <dbl> 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0,… #> $ n_fog      <dbl> 6, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 4, 14, 3, 0, 0, 0, 1, 0, 0… #> $ inso       <dbl> 5.4, 7.7, 7.8, 6.2, 8.7, 11.3, 11.2, 10.5, 9.4, 5.6, 5.2, 3… #> $ q_max      <chr> \"1003.5(11)\", \"1004.9(04)\", \"1001.0(09)\", \"991.5(07)\", \"991… #> $ nw_55      <dbl> 5, 9, 8, 7, NA, NA, 5, 8, 3, 4, 5, 3, NA, 0, 0, 0, 5, 0, 0,… #> $ q_mar      <dbl> 1026.0, 1027.1, 1020.3, 1008.0, 1014.4, 1017.1, 1013.6, 101… #> $ q_med      <dbl> 994.1, 996.0, 989.5, 977.8, 984.7, 987.6, 984.4, 986.3, 984… #> $ tm_min     <dbl> -0.1, 4.8, 6.0, 8.4, 13.2, 16.0, 17.7, 18.2, 15.0, 11.2, 6.… #> $ ta_max     <chr> \"16.3(31)\", \"20.8(27)\", \"24.0(11)\", \"27.2(25)\", \"33.0(30)\",… #> $ ts_min     <dbl> 6.2, 10.7, 11.0, 14.9, 18.8, 20.3, 21.4, 21.5, 20.0, 14.9, … #> $ nt_30      <dbl> 0, 0, 0, 0, 5, 19, 19, 21, 12, 0, 0, 0, 76, 0, 0, 0, 0, 2, … #> $ nv_0050    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ n_des      <dbl> 12, 8, 8, 1, 1, 18, 14, 12, 9, 3, 1, 1, 88, 15, 8, 11, 0, 3… #> $ w_racha    <chr> \"32/22.2(22)\", \"33/21.4(17)\", \"32/20.0(15)\", \"10/20.0(02)\",… #> $ np_100     <dbl> 0, 0, 0, 1, 3, 1, 0, 0, 0, 4, 3, 0, 12, 1, 0, 2, 2, 2, 2, 1… #> $ n_nub      <dbl> 11, 21, 19, 21, 24, 10, 16, 18, 21, 22, 23, 23, 229, 11, 20… #> $ p_sol      <dbl> 56, 72, 65, 46, 59, 75, 76, 76, 75, 51, 53, 39, 62, 65, 70,… #> $ nw_91      <dbl> 0, 0, 0, 0, NA, NA, 0, 0, 0, 0, 0, 1, NA, 0, 0, 0, 0, 0, 0,… #> $ ts_20      <dbl> 4.9, 11.8, 14.9, 16.7, 23.5, 27.7, 30.8, 31.3, 27.0, 17.8, … #> $ np_001     <dbl> 3, 0, 7, 10, 13, 6, 4, 4, 3, 10, 14, 14, 88, 6, 1, 5, 21, 1… #> $ ta_min     <chr> \"-5.8(12)\", \"-1.5(06)\", \"-0.8(03)\", \"1.7(06)\", \"9.2(01)\", \"… #> $ e          <dbl> 65, 79, 83, 99, 143, 164, 153, 172, 139, 116, 91, 90, 116, … #> $ np_300     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,… #> $ nv_1000    <dbl> 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 7, 2, 0, 0, 0, 0, 0, 0,… #> $ evap       <dbl> 861, 1638, 2062, 1730, 2116, 2955, 3494, 3584, 2846, 2111, … #> $ p_mes      <dbl> 14.9, 0.0, 11.1, 49.1, 67.5, 34.9, 4.7, 2.4, 1.9, 104.5, 61… #> $ n_llu      <dbl> 3, 0, 7, 14, 11, 8, 4, 6, 7, 12, 14, 17, 103, 4, 1, 5, 21, … #> $ n_tor      <dbl> 0, 0, 0, 1, 8, 4, 1, 5, 3, 0, 1, 0, 23, 0, 0, 1, 1, 3, 3, 1… #> $ ts_10      <dbl> 5.0, 12.7, 15.7, 17.5, 24.8, 29.2, 32.3, 32.1, 27.6, 17.7, … #> $ w_med      <dbl> 15, 16, 18, 17, 13, 21, 19, 18, 14, 15, 15, 14, 16, 5, 5, 7… #> $ nt_00      <dbl> 16, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 23, 13, 0, 0, 0, 0, 0,… #> $ ti_max     <dbl> 1.0, 13.4, 12.1, 11.7, 21.5, 16.5, 22.5, 25.5, 21.2, 14.5, … #> $ n_nie      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0,… #> $ tm_mes     <dbl> 4.3, 10.8, 12.0, 13.7, 19.5, 23.0, 24.4, 25.3, 21.8, 15.8, … #> $ tm_max     <dbl> 8.7, 16.9, 17.9, 18.9, 25.7, 29.8, 31.0, 32.4, 28.5, 20.4, … #> $ nv_0100    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,… #> $ ts_50      <dbl> 5.6, 10.6, 13.6, 15.2, 20.8, 26.1, 28.3, 28.9, 25.9, 18.4, … #> $ q_min      <chr> \"979.7(14)\", \"988.6(17)\", \"976.5(28)\", \"959.5(02)\", \"977.5(… #> $ np_010     <dbl> 2, 0, 4, 6, 8, 5, 3, 1, 1, 7, 9, 8, 54, 3, 1, 4, 13, 9, 3, … #> $ w_rec      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 144, 14…"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal climatology values — aemet_normal","title":"Normal climatology values — aemet_normal","text":"Get normal climatology values station (stations aemet_normal_clim_all(). Standard climatology 1981 2010.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal climatology values — aemet_normal","text":"","code":"aemet_normal_clim(station = NULL, verbose = FALSE, return_sf = FALSE)  aemet_normal_clim_all(verbose = FALSE, return_sf = FALSE)"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal climatology values — aemet_normal","text":"station Character string station identifier code(s) (see aemet_stations()) \"\" stations. verbose Logical TRUE/FALSE. Provides information flow information client server. return_sf Logical TRUE FALSE. function return sf spatial object? FALSE (default value) returns tibble. Note need sf package installed.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normal climatology values — aemet_normal","text":"tibble sf object.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_normal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Normal climatology values — aemet_normal","text":"Code modified project https://github.com/SevillaR/aemet","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_normal.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Normal climatology values — aemet_normal","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normal climatology values — aemet_normal","text":"","code":"library(tibble) obs <- aemet_normal_clim(c(\"9434\", \"3195\")) glimpse(obs) #> Rows: 26 #> Columns: 475 #> $ indicativo  <chr> \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9434\", \"9… #> $ w_racha_max <dbl> 29.7, 35.0, 30.3, 26.7, 28.3, 30.8, 28.1, 24.7, 25.8, 28.3… #> $ np_010_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ np_010_s    <dbl> 3.35, 2.40, 2.29, 3.09, 3.04, 2.63, 1.72, 1.86, 2.01, 3.43… #> $ q_max_s     <dbl> 4.50, 4.57, 3.61, 2.95, 2.75, 2.04, 1.94, 1.60, 1.85, 2.33… #> $ n_tor_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ n_tor_s     <dbl> 0.00, 0.25, 0.60, 1.40, 2.67, 2.38, 2.10, 2.21, 1.86, 0.89… #> $ q_max_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ tm_min_q4   <dbl> 4.3, 4.5, 7.2, 8.7, 12.9, 16.6, 19.2, 19.3, 16.0, 12.1, 7.… #> $ tm_min_q1   <dbl> 1.1, 2.4, 4.7, 7.2, 10.6, 15.0, 17.2, 17.2, 14.2, 10.0, 5.… #> $ tm_min_q3   <dbl> 3.3, 4.0, 5.7, 8.3, 12.2, 15.8, 18.6, 18.7, 15.3, 11.1, 6.… #> $ tm_min_q2   <dbl> 2.2, 2.9, 5.4, 7.8, 11.7, 15.5, 17.7, 18.1, 14.9, 10.8, 5.… #> $ q_mar_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ n_des_min   <dbl> 0, 1, 1, 1, 0, 2, 7, 6, 3, 1, 0, 0, 56, 0, 2, 0, 0, 0, 1, … #> $ q_mar_s     <dbl> 5.81, 4.85, 3.76, 2.14, 2.09, 1.54, 1.29, 1.33, 2.05, 2.86… #> $ q_med_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ ts_20_q1    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_20_q2    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ e_cv        <dbl> 0.11, 0.13, 0.11, 0.11, 0.10, 0.09, 0.09, 0.12, 0.12, 0.10… #> $ ts_20_q4    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ e_min       <dbl> 61, 55, 67, 75, 97, 115, 132, 132, 119, 107, 69, 60, 103, … #> $ np_300_q4   <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ np_300_q1   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ np_300_q3   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0… #> $ hr_max      <dbl> 83, 78, 70, 69, 67, 62, 57, 61, 69, 80, 84, 84, 66, 81, 73… #> $ np_300_cv   <dbl> NA, NA, 3.81, 2.59, 3.05, 2.59, 3.81, 3.05, 2.27, 2.59, 3.… #> $ n_nub_max   <dbl> 24, 23, 26, 24, 26, 23, 23, 22, 23, 25, 26, 24, 245, 22, 2… #> $ tm_min_cv   <dbl> 0.64, 0.41, 0.21, 0.12, 0.11, 0.08, 0.06, 0.05, 0.07, 0.10… #> $ n_des_mn    <dbl> 4.5, 5.0, 6.5, 4.0, 3.0, 7.0, 14.5, 11.0, 8.0, 6.0, 3.5, 3… #> $ n_des_md    <dbl> 4.6, 5.1, 6.7, 4.6, 4.5, 8.2, 14.6, 10.9, 8.0, 5.4, 4.0, 4… #> $ ts_20_s     <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ q_med_mn    <dbl> 990.1, 989.0, 987.9, 984.2, 984.5, 986.1, 986.0, 985.8, 98… #> $ evap_cv     <dbl> 0.41, 0.39, 0.24, 0.27, 0.23, 0.25, 0.21, 0.23, 0.24, 0.29… #> $ q_med_md    <dbl> 991.0, 989.1, 987.5, 983.9, 984.5, 985.8, 985.9, 985.6, 98… #> $ nt_30_cv    <dbl> NA, NA, NA, 2.65, 0.79, 0.37, 0.20, 0.24, 0.66, 2.53, NA, … #> $ mes         <chr> \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\"… #> $ ts_20_cv    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ inso_max    <dbl> 6.9, 7.7, 9.6, 9.2, 10.8, 12.0, 13.0, 11.4, 9.6, 7.9, 7.6,… #> $ ts_20_max   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ np_001_max  <dbl> 20, 14, 13, 18, 20, 15, 9, 9, 12, 16, 15, 20, 103, 20, 18,… #> $ n_llu_md    <dbl> 8.7, 7.8, 7.4, 10.0, 10.8, 7.5, 5.0, 5.1, 7.1, 10.1, 9.9, … #> $ nv_1000_s   <dbl> 3.06, 2.24, 0.31, 0.18, 0.35, 0.00, 0.00, 0.00, 0.31, 0.78… #> $ ta_min_mn   <dbl> -3.4, -2.3, -0.6, 3.0, 6.5, 10.6, 13.8, 13.6, 9.8, 5.5, -0… #> $ tm_mes_max  <dbl> 9.4, 12.1, 14.6, 15.4, 20.5, 26.6, 28.2, 27.9, 24.1, 18.8,… #> $ ta_max_mn   <dbl> 17.1, 19.2, 24.0, 27.5, 32.1, 36.1, 38.8, 37.6, 33.9, 27.5… #> $ nv_1000_n   <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 28, 29… #> $ ta_max_md   <dbl> 17.1, 19.1, 24.5, 27.2, 31.8, 36.4, 38.9, 37.5, 33.6, 27.6… #> $ nw_91_min   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ta_max_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ ta_max_s    <dbl> 1.87, 1.79, 1.96, 2.49, 2.56, 2.13, 1.90, 2.01, 2.42, 2.20… #> $ ts_10_md    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ nw_55_mn    <dbl> 7, 8, 8, 8, 6, 6, 5, 5, 4, 4, 5, 6, 77, 2, 1, 2, 2, 1, 1, … #> $ ta_min_s    <dbl> 2.35, 2.09, 2.25, 1.44, 1.77, 1.70, 1.58, 1.57, 1.72, 1.97… #> $ nw_55_md    <dbl> 7.9, 8.1, 9.4, 8.8, 6.6, 6.1, 6.6, 5.3, 4.6, 4.7, 6.0, 6.7… #> $ np_300_mn   <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ evap_q4     <dbl> 1048, 1519, 2071, 2286, 2787, 3542, 4016, 3812, 2651, 1758… #> $ evap_q1     <dbl> 545, 707, 1291, 1381, 1788, 2199, 2478, 2339, 1652, 1025, … #> $ np_300_md   <dbl> 0.0, 0.0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.0… #> $ evap_q3     <dbl> 850, 1188, 1879, 1922, 2406, 2937, 3529, 3215, 2324, 1507,… #> $ evap_q2     <dbl> 727, 807, 1607, 1638, 2168, 2852, 3173, 2938, 1933, 1289, … #> $ p_mes_min   <dbl> 0.0, 0.0, 0.0, 3.8, 5.2, 0.0, 0.3, 0.1, 0.0, 0.6, 0.4, 0.7… #> $ ts_min_min  <dbl> 5.2, 5.5, 8.5, 10.5, 13.4, 17.8, 20.0, 19.2, 17.1, 13.5, 9… #> $ n_des_s     <dbl> 3.54, 2.78, 4.86, 3.44, 3.05, 3.76, 3.62, 3.13, 3.37, 3.36… #> $ nv_0100_mn  <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ p_mes_md    <dbl> 21.0, 21.5, 19.1, 39.3, 43.7, 26.4, 17.3, 16.6, 29.5, 36.4… #> $ n_tor_cv    <dbl> NA, 3.81, 1.99, 1.03, 0.65, 0.60, 0.56, 0.59, 0.66, 0.86, … #> $ nv_0100_md  <dbl> 0.2, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.4… #> $ q_min_max   <dbl> 992.1, 988.6, 988.8, 976.6, 978.3, 980.1, 979.7, 981.9, 98… #> $ n_des_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 26, 27… #> $ p_sol_s     <dbl> 10.16, 10.83, 8.41, 8.93, 7.77, 7.62, 6.96, 5.58, 7.49, 8.… #> $ ts_20_n     <dbl> 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, … #> $ ts_10_cv    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ nw_91_s     <dbl> 1.35, 0.38, 0.50, 0.31, 0.42, 0.46, 0.56, 0.00, 0.19, 0.38… #> $ nw_91_n     <dbl> 28, 29, 30, 29, 27, 26, 29, 29, 27, 27, 28, 28, 19, 27, 27… #> $ nt_00_min   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0… #> $ p_sol_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 29, 29, 30, 30, 30, 29, 23, 24… #> $ n_nie_mn    <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ n_nub_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 26, 27… #> $ n_nie_md    <dbl> 0.7, 0.4, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.5… #> $ tm_mes_md   <dbl> 6.6, 8.2, 11.6, 13.8, 18.0, 22.6, 25.3, 25.0, 21.2, 16.2, … #> $ p_sol_cv    <dbl> 0.23, 0.20, 0.14, 0.16, 0.13, 0.11, 0.09, 0.08, 0.12, 0.16… #> $ n_nub_s     <dbl> 4.19, 3.27, 3.70, 4.00, 2.91, 3.21, 3.47, 3.08, 3.14, 2.50… #> $ w_racha_min <dbl> 15.8, 16.9, 15.0, 16.7, 13.6, 12.5, 14.4, 14.4, 14.7, 12.2… #> $ np_300_max  <dbl> 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 4, 1, 1, 1, 0, 2, 0, 1… #> $ nv_0050_md  <dbl> 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2… #> $ ta_min_min  <dbl> -6.6, -7.6, -6.0, -0.8, 1.7, 7.4, 10.8, 10.4, 7.0, 1.0, -5… #> $ glo_mn      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ inso_s      <dbl> 0.96, 1.14, 0.99, 1.18, 1.14, 1.17, 1.05, 0.79, 0.93, 0.99… #> $ glo_md      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ n_nie_q1    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ w_med_q4    <dbl> 21.6, 20.0, 21.0, 20.0, 20.0, 20.0, 20.6, 19.8, 17.0, 17.0… #> $ n_tor_max   <dbl> 0, 1, 2, 5, 10, 9, 9, 8, 8, 3, 1, 2, 32, 1, 1, 3, 5, 11, 9… #> $ w_med_q2    <dbl> 14.4, 16.0, 17.0, 18.0, 16.0, 16.4, 16.4, 16.0, 13.0, 13.0… #> $ w_med_q3    <dbl> 17.6, 18.0, 20.0, 19.0, 18.0, 18.0, 19.0, 17.6, 15.0, 15.0… #> $ n_gra_md    <dbl> 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0… #> $ inso_q4     <dbl> 5.0, 6.9, 7.9, 8.7, 10.0, 11.3, 12.3, 10.7, 9.1, 7.3, 5.8,… #> $ q_max_min   <dbl> 994.7, 992.3, 992.2, 990.2, 989.5, 989.5, 990.5, 989.8, 99… #> $ ts_10_max   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ nt_30_min   <dbl> 0, 0, 0, 0, 0, 3, 14, 11, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 1… #> $ n_nub_cv    <dbl> 0.24, 0.18, 0.20, 0.21, 0.14, 0.17, 0.23, 0.17, 0.17, 0.12… #> $ p_mes_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ p_mes_q1    <dbl> 4.3, 5.3, 4.6, 14.5, 19.4, 7.2, 3.9, 2.3, 3.7, 10.0, 13.5,… #> $ p_mes_q2    <dbl> 10.1, 14.0, 9.8, 28.1, 31.8, 13.4, 7.6, 6.6, 15.4, 23.4, 1… #> $ p_mes_q3    <dbl> 16.2, 22.6, 19.2, 41.8, 40.0, 24.3, 17.5, 10.5, 26.6, 40.3… #> $ p_mes_q4    <dbl> 35.2, 33.3, 31.1, 49.1, 68.8, 54.7, 33.9, 30.2, 55.0, 60.7… #> $ hr_cv       <dbl> 0.08, 0.08, 0.08, 0.09, 0.09, 0.10, 0.08, 0.10, 0.08, 0.08… #> $ n_tor_md    <dbl> 0.0, 0.1, 0.3, 1.4, 4.1, 3.9, 3.8, 3.7, 2.8, 1.0, 0.1, 0.1… #> $ p_mes_s     <dbl> 22.15, 18.02, 16.84, 30.17, 31.03, 23.59, 16.13, 20.64, 28… #> $ nw_91_cv    <dbl> 2.90, 2.23, 2.16, 3.00, 1.91, 3.02, 2.70, NA, 5.20, 5.20, … #> $ n_tor_mn    <dbl> 0.0, 0.0, 0.0, 1.0, 4.0, 4.0, 3.0, 4.0, 3.0, 1.0, 0.0, 0.0… #> $ nv_1000_max <dbl> 12, 9, 1, 1, 1, 0, 0, 0, 1, 2, 9, 12, 23, 7, 6, 4, 2, 1, 0… #> $ n_gra_cv    <dbl> 5.00, NA, 3.26, NA, 3.96, 5.39, 3.60, 3.81, 2.94, NA, 5.48… #> $ w_racha_n   <dbl> 28, 29, 30, 29, 27, 26, 29, 29, 27, 27, 29, 28, 20, 27, 27… #> $ w_med_min   <dbl> 8, 8, 11, 9, 12, 13, 13, 9, 11, 9, 9, 9, 14, 4, 5, 6, 5, 6… #> $ w_racha_s   <dbl> 3.77, 3.51, 3.63, 2.51, 3.99, 4.05, 3.83, 2.68, 2.82, 3.27… #> $ np_100_max  <dbl> 3, 3, 2, 4, 5, 3, 2, 3, 4, 4, 3, 1, 17, 5, 5, 3, 5, 5, 3, … #> $ e_s         <dbl> 8.42, 9.71, 9.57, 10.25, 11.51, 11.98, 13.93, 19.25, 17.16… #> $ w_med_s     <dbl> 5.25, 4.45, 3.29, 3.63, 3.74, 2.96, 2.88, 2.99, 2.37, 2.76… #> $ p_sol_md    <dbl> 44, 55, 59, 57, 61, 68, 76, 74, 65, 57, 50, 42, 59, 50, 52… #> $ n_cub_q4    <dbl> 11.8, 7.0, 8.0, 8.0, 8.8, 5.0, 2.0, 2.8, 4.8, 7.8, 9.0, 13… #> $ n_cub_q3    <dbl> 10.6, 6.0, 6.0, 7.6, 6.0, 3.0, 1.0, 2.0, 4.0, 6.0, 8.6, 9.… #> $ n_cub_q2    <dbl> 8.0, 4.0, 4.4, 5.0, 5.0, 2.0, 0.0, 1.0, 2.0, 4.0, 6.0, 8.0… #> $ n_cub_q1    <dbl> 6.0, 3.0, 3.0, 4.0, 4.0, 1.0, 0.0, 0.0, 1.2, 2.2, 3.2, 7.0… #> $ nw_55_max   <dbl> 22, 17, 23, 21, 17, 18, 18, 13, 14, 11, 16, 20, 173, 7, 7,… #> $ p_sol_mn    <dbl> 43, 56, 57, 58, 62, 70, 77, 74, 63, 59, 53, 42, 60, 47, 51… #> $ n_cub_s     <dbl> 3.47, 3.24, 2.83, 3.07, 2.72, 2.12, 1.58, 2.06, 1.94, 3.46… #> $ hr_mn       <dbl> 75, 66, 59, 56, 53, 48, 47, 51, 57, 68, 73, 77, 61, 72, 65… #> $ q_med_max   <dbl> 1002.5, 996.5, 997.4, 986.7, 988.0, 987.9, 987.9, 988.5, 9… #> $ hr_md       <dbl> 75, 67, 59, 57, 54, 49, 47, 51, 57, 67, 73, 76, 61, 71, 64… #> $ np_010_md   <dbl> 4.0, 3.9, 3.7, 5.7, 6.4, 4.0, 2.6, 2.3, 3.2, 5.4, 5.1, 4.8… #> $ n_cub_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 26, 27… #> $ np_010_mn   <dbl> 3.0, 4.5, 4.0, 5.5, 6.0, 3.5, 2.0, 2.0, 3.5, 4.0, 5.0, 4.0… #> $ nw_91_q4    <dbl> 0.2, 0.0, 0.8, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ p_max_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ nw_91_q2    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0… #> $ nw_91_q3    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0… #> $ nw_91_q1    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ n_gra_q4    <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ n_gra_q1    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ n_gra_q3    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0… #> $ nw_55_s     <dbl> 5.68, 3.79, 5.18, 4.25, 4.39, 3.82, 4.79, 3.50, 3.08, 2.80… #> $ nw_55_n     <dbl> 28, 29, 30, 29, 27, 26, 29, 29, 27, 27, 28, 28, 19, 27, 27… #> $ w_med_mn    <dbl> 15.5, 17.0, 18.0, 18.0, 17.0, 17.5, 17.5, 16.5, 14.0, 14.0… #> $ n_nub_min   <dbl> 10, 9, 11, 10, 15, 10, 8, 12, 9, 16, 9, 10, 186, 9, 10, 7,… #> $ p_max_s     <dbl> 6.27, 8.05, 9.23, 12.61, 11.57, 13.67, 11.87, 12.46, 16.90… #> $ ts_20_min   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ inso_min    <dbl> 2.2, 3.3, 5.0, 5.3, 6.0, 7.6, 9.0, 7.7, 6.1, 4.5, 2.8, 2.2… #> $ n_gra_max   <dbl> 1, 0, 2, 0, 2, 1, 1, 2, 1, 0, 1, 0, 5, 1, 1, 1, 3, 3, 2, 1… #> $ p_sol_q1    <dbl> 36, 48, 51, 46, 54, 58, 70, 69, 57, 47, 39, 34, 55, 38, 42… #> $ p_sol_q3    <dbl> 45, 60, 62, 62, 64, 72, 78, 76, 65, 60, 55, 45, 61, 53, 57… #> $ p_sol_q2    <dbl> 41, 52, 55, 54, 59, 67, 75, 72, 62, 54, 50, 39, 60, 44, 48… #> $ p_sol_q4    <dbl> 52, 65, 66, 65, 69, 74, 83, 77, 73, 66, 59, 52, 62, 65, 63… #> $ n_fog_q1    <dbl> 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0… #> $ ta_min_md   <dbl> -3.1, -2.4, -0.4, 2.5, 6.2, 10.8, 13.8, 13.8, 9.8, 4.9, -0… #> $ n_fog_q3    <dbl> 7.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 4.6, 8.0… #> $ n_fog_q2    <dbl> 5.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 6.0… #> $ n_fog_q4    <dbl> 11.8, 5.8, 1.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 2.0, 6.8, 10… #> $ w_med_cv    <dbl> 0.32, 0.26, 0.18, 0.19, 0.21, 0.17, 0.16, 0.18, 0.17, 0.20… #> $ p_max_max   <dbl> 23.2, 29.0, 32.5, 57.9, 46.2, 64.5, 57.7, 51.9, 70.8, 45.4… #> $ e_n         <dbl> 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 29, 30, 30… #> $ q_min_md    <dbl> 972.5, 971.3, 971.4, 969.3, 973.6, 975.7, 976.3, 976.6, 97… #> $ n_fog_cv    <dbl> 0.75, 1.07, 1.34, 3.05, 2.19, 4.03, 5.48, NA, 2.77, 1.14, … #> $ p_mes_cv    <dbl> 1.06, 0.84, 0.88, 0.77, 0.71, 0.89, 0.93, 1.25, 0.95, 0.78… #> $ nv_0100_max <dbl> 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 6, 1, 1, 0, 0, 0, 0, 1… #> $ np_300_q2   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0… #> $ q_min_mn    <dbl> 973.4, 972.3, 973.2, 971.0, 973.8, 976.3, 976.2, 976.5, 97… #> $ ti_max_min  <dbl> -0.6, 0.8, 4.0, 5.2, 10.6, 15.8, 19.6, 18.5, 15.4, 9.5, 2.… #> $ np_100_cv   <dbl> 1.76, 1.49, 1.64, 1.03, 1.08, 1.17, 1.31, 1.93, 1.23, 1.18… #> $ hr_q3       <dbl> 75, 68, 60, 58, 55, 49, 48, 52, 58, 70, 74, 78, 62, 73, 67… #> $ hr_q2       <dbl> 73, 65, 58, 55, 53, 47, 46, 48, 56, 65, 71, 75, 60, 69, 63… #> $ hr_q1       <dbl> 69, 61, 55, 53, 49, 46, 43, 45, 53, 62, 68, 71, 59, 64, 59… #> $ nv_0050_s   <dbl> 0.40, 0.46, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.18… #> $ hr_q4       <dbl> 81, 72, 62, 63, 58, 52, 51, 56, 61, 72, 78, 80, 63, 76, 69… #> $ evap_s      <dbl> 342.57, 418.08, 399.72, 486.87, 523.22, 738.14, 685.87, 71… #> $ w_med_q1    <dbl> 11.2, 13.0, 16.0, 16.2, 14.0, 16.0, 15.0, 14.0, 12.0, 11.2… #> $ evap_n      <dbl> 29, 29, 28, 30, 30, 30, 29, 30, 30, 30, 30, 26, 23, 27, 27… #> $ nv_0050_n   <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 28, 29… #> $ nv_0050_q2  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ nv_0050_q3  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ q_max_md    <dbl> 1003.6, 1002.5, 1000.0, 996.0, 994.7, 993.9, 994.3, 993.6,… #> $ nv_0050_q1  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ nv_0050_q4  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0… #> $ q_max_mn    <dbl> 1003.1, 1002.9, 1000.5, 996.5, 994.7, 994.0, 993.9, 993.3,… #> $ n_llu_min   <dbl> 0, 0, 0, 0, 3, 2, 2, 1, 1, 2, 2, 1, 65, 0, 1, 0, 5, 3, 1, … #> $ ts_min_max  <dbl> 12.6, 12.4, 15.3, 15.6, 20.2, 24.7, 24.0, 24.3, 23.4, 19.5… #> $ evap_max    <dbl> 1860, 2140, 2503, 2978, 3139, 4881, 4766, 4664, 3071, 2446… #> $ ta_min_q1   <dbl> -5.4, -3.6, -2.2, 1.1, 5.0, 9.5, 12.4, 12.6, 7.8, 2.8, -2.… #> $ ta_min_q3   <dbl> -2.7, -1.5, 0.1, 3.2, 6.6, 10.8, 14.1, 14.3, 10.1, 5.8, 0.… #> $ n_cub_cv    <dbl> 0.39, 0.63, 0.52, 0.47, 0.47, 0.73, 1.35, 1.17, 0.62, 0.64… #> $ ta_min_q4   <dbl> -0.4, -0.9, 1.6, 3.8, 7.7, 12.5, 15.2, 15.5, 11.4, 6.5, 2.… #> $ tm_mes_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ tm_max_s    <dbl> 1.86, 2.08, 1.69, 1.52, 2.07, 2.05, 1.59, 1.68, 1.44, 1.80… #> $ nt_30_md    <dbl> 0.0, 0.0, 0.0, 0.3, 3.6, 14.4, 22.3, 21.1, 7.1, 0.4, 0.0, … #> $ tm_max_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ tm_mes_s    <dbl> 1.73, 1.59, 1.32, 1.18, 1.62, 1.61, 1.33, 1.28, 1.17, 1.35… #> $ nt_30_mn    <dbl> 0.0, 0.0, 0.0, 0.0, 4.0, 14.0, 23.0, 22.0, 7.5, 0.0, 0.0, … #> $ ts_50_q4    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_50_q3    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_50_q2    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_50_q1    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ q_mar_mn    <dbl> 1021.5, 1020.4, 1018.8, 1014.5, 1014.4, 1015.6, 1015.1, 10… #> $ np_100_q4   <dbl> 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0… #> $ np_100_q3   <dbl> 0.0, 0.6, 0.0, 1.0, 1.0, 1.0, 0.6, 0.0, 1.0, 1.0, 1.0, 0.0… #> $ np_100_q2   <dbl> 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ np_100_q1   <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ n_des_cv    <dbl> 0.78, 0.54, 0.72, 0.75, 0.68, 0.46, 0.25, 0.29, 0.42, 0.63… #> $ q_mar_md    <dbl> 1022.5, 1020.3, 1018.3, 1014.2, 1014.4, 1015.2, 1015.1, 10… #> $ tm_mes_q4   <dbl> 8.2, 9.9, 12.9, 14.9, 19.5, 23.8, 26.7, 26.1, 22.4, 17.6, … #> $ tm_mes_q2   <dbl> 6.2, 7.3, 11.1, 13.6, 17.6, 22.1, 25.0, 24.8, 20.8, 15.8, … #> $ tm_mes_q3   <dbl> 7.2, 8.4, 11.6, 14.3, 18.5, 22.8, 25.6, 25.4, 21.5, 16.5, … #> $ np_300_min  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ p_sol_min   <dbl> 23, 31, 41, 39, 41, 50, 61, 56, 49, 41, 28, 23, 50, 26, 34… #> $ n_cub_min   <dbl> 1, 0, 0, 1, 2, 0, 0, 0, 0, 1, 2, 5, 37, 0, 1, 1, 3, 2, 0, … #> $ n_gra_s     <dbl> 0.20, 0.00, 0.43, 0.00, 0.41, 0.19, 0.27, 0.42, 0.31, 0.00… #> $ w_racha_mn  <dbl> 22.1, 22.5, 21.6, 21.4, 19.4, 19.7, 20.6, 19.7, 18.9, 19.4… #> $ p_max_cv    <dbl> 0.82, 0.82, 1.00, 0.75, 0.66, 1.00, 1.11, 1.32, 1.06, 0.87… #> $ n_des_q4    <dbl> 7.8, 7.8, 11.0, 7.8, 8.0, 11.0, 18.0, 13.8, 10.0, 8.8, 5.8… #> $ n_des_q1    <dbl> 1.0, 2.2, 2.0, 2.0, 2.0, 5.0, 12.0, 8.2, 5.2, 2.0, 1.2, 1.… #> $ n_des_q3    <dbl> 5.0, 5.6, 7.0, 4.6, 5.0, 8.0, 15.0, 11.6, 8.6, 6.0, 4.0, 4… #> $ n_des_q2    <dbl> 3.0, 4.0, 4.4, 3.0, 3.0, 6.4, 14.0, 10.0, 7.0, 3.4, 3.0, 2… #> $ ti_max_max  <dbl> 8.5, 13.4, 16.5, 15.2, 21.6, 26.4, 29.8, 28.3, 24.6, 20.2,… #> $ n_gra_n     <dbl> 25, 29, 30, 27, 29, 29, 27, 27, 28, 29, 30, 26, 22, 30, 30… #> $ tm_min_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ nt_30_max   <dbl> 0, 0, 0, 3, 9, 24, 30, 29, 16, 4, 0, 0, 94, 0, 0, 0, 0, 6,… #> $ q_max_max   <dbl> 1011.1, 1013.9, 1011.0, 1001.1, 1002.5, 997.2, 997.8, 996.… #> $ tm_min_s    <dbl> 1.71, 1.36, 1.20, 0.96, 1.25, 1.22, 1.12, 0.99, 1.02, 1.09… #> $ nt_00_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ nv_0050_min <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ts_10_s     <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ n_nub_q4    <dbl> 21.8, 20.0, 21.8, 23.0, 23.8, 22.0, 17.8, 21.0, 21.0, 22.0… #> $ n_nub_q1    <dbl> 13.4, 16.0, 15.2, 15.0, 18.0, 16.0, 12.2, 14.4, 17.0, 18.2… #> $ n_nub_q2    <dbl> 16.0, 18.0, 18.4, 19.0, 19.4, 18.4, 14.4, 18.4, 18.4, 19.0… #> $ n_nub_q3    <dbl> 18.6, 19.0, 20.6, 20.6, 21.6, 21.0, 16.0, 20.0, 19.0, 20.6… #> $ ts_50_s     <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_10_n     <dbl> 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, … #> $ nt_00_s     <dbl> 5.99, 3.77, 1.69, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00… #> $ ts_10_min   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ tm_mes_mn   <dbl> 6.7, 8.2, 11.3, 14.0, 18.2, 22.5, 25.3, 25.1, 21.1, 16.2, … #> $ np_100_min  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0… #> $ nv_1000_min <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0… #> $ nt_30_s     <dbl> 0.00, 0.00, 0.00, 0.79, 2.85, 5.33, 4.52, 5.15, 4.69, 0.93… #> $ nt_00_q3    <dbl> 8.0, 5.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 6.6… #> $ nt_00_q2    <dbl> 6.0, 4.0, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0… #> $ nt_00_q1    <dbl> 1.2, 1.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0… #> $ n_tor_min   <dbl> 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0… #> $ nt_00_q4    <dbl> 12.8, 8.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.8, 11… #> $ ts_20_q3    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ nt_00_max   <dbl> 20, 14, 7, 1, 0, 0, 0, 0, 0, 0, 8, 21, 49, 15, 11, 8, 3, 0… #> $ nw_55_min   <dbl> 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, … #> $ n_llu_mn    <dbl> 10.0, 9.0, 7.5, 9.0, 11.0, 8.0, 4.0, 5.0, 7.0, 10.0, 10.5,… #> $ ts_50_mn    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ glo_min     <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_50_md    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ q_med_min   <dbl> 978.6, 977.3, 980.4, 977.8, 979.5, 981.2, 983.7, 982.2, 98… #> $ nv_0050_cv  <dbl> 4.03, 2.77, NA, NA, NA, NA, NA, NA, NA, 5.48, 5.48, 2.68, … #> $ inso_q2     <dbl> 3.9, 5.5, 6.5, 7.3, 8.7, 10.2, 11.1, 10.0, 7.8, 6.0, 4.9, … #> $ inso_q3     <dbl> 4.3, 6.4, 7.4, 8.2, 9.3, 10.8, 11.5, 10.5, 8.1, 6.7, 5.5, … #> $ inso_q1     <dbl> 3.5, 5.1, 6.2, 6.2, 7.7, 8.8, 10.5, 9.5, 7.1, 5.2, 3.8, 3.… #> $ n_fog_max   <dbl> 17, 12, 1, 2, 2, 2, 1, 0, 2, 4, 12, 14, 36, 11, 11, 6, 5, … #> $ np_100_s    <dbl> 0.82, 0.89, 0.55, 1.17, 1.26, 0.90, 0.57, 0.77, 1.19, 1.22… #> $ np_300_s    <dbl> 0.00, 0.00, 0.25, 0.35, 0.31, 0.35, 0.25, 0.31, 0.38, 0.35… #> $ ta_min_cv   <dbl> -0.76, -0.86, -5.83, 0.58, 0.28, 0.16, 0.11, 0.11, 0.18, 0… #> $ tm_mes_cv   <dbl> 0.26, 0.19, 0.11, 0.09, 0.09, 0.07, 0.05, 0.05, 0.06, 0.08… #> $ ts_min_md   <dbl> 9.0, 9.6, 11.3, 13.1, 16.8, 20.8, 22.2, 22.0, 19.7, 16.2, … #> $ ts_min_mn   <dbl> 9.3, 10.2, 11.0, 13.6, 16.8, 20.6, 22.3, 22.0, 19.7, 16.5,… #> $ inso_cv     <dbl> 0.23, 0.20, 0.14, 0.16, 0.13, 0.11, 0.09, 0.08, 0.12, 0.16… #> $ np_300_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ np_100_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ ts_min_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ tm_max_md   <dbl> 10.5, 13.1, 17.3, 19.6, 24.1, 29.3, 32.4, 31.7, 27.1, 21.4… #> $ tm_max_mn   <dbl> 10.9, 13.1, 17.3, 19.9, 24.3, 29.1, 32.4, 32.0, 27.1, 21.4… #> $ ts_min_s    <dbl> 1.92, 1.87, 1.60, 1.46, 1.60, 1.40, 1.05, 1.18, 1.36, 1.62… #> $ tm_mes_q1   <dbl> 4.7, 6.9, 10.7, 12.9, 16.8, 21.7, 24.2, 23.6, 20.1, 15.1, … #> $ p_max_q1    <dbl> 2.4, 2.8, 2.5, 6.3, 7.4, 3.7, 2.0, 1.0, 1.7, 5.0, 6.2, 3.4… #> $ p_max_q3    <dbl> 7.9, 10.4, 7.3, 16.4, 19.3, 12.8, 10.3, 6.8, 16.3, 12.5, 1… #> $ p_max_q2    <dbl> 5.7, 5.8, 4.1, 11.3, 12.7, 7.4, 5.7, 3.8, 6.3, 8.3, 7.9, 5… #> $ p_max_q4    <dbl> 12.8, 18.2, 15.8, 22.3, 26.3, 20.5, 15.1, 13.8, 26.8, 26.5… #> $ n_nie_s     <dbl> 1.28, 0.83, 0.48, 0.19, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00… #> $ n_gra_min   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ nt_30_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ n_nie_n     <dbl> 25, 29, 30, 27, 29, 29, 27, 27, 28, 29, 30, 26, 22, 30, 30… #> $ ts_50_n     <dbl> 11, 11, 11, 11, 11, 11, 10, 10, 9, 11, 11, 11, 9, 0, 0, 0,… #> $ nv_0100_min <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ q_mar_q1    <dbl> 1017.5, 1016.0, 1014.5, 1012.3, 1012.5, 1013.7, 1013.9, 10… #> $ q_mar_q2    <dbl> 1020.4, 1019.6, 1017.6, 1014.0, 1013.7, 1015.3, 1014.7, 10… #> $ q_mar_q3    <dbl> 1024.1, 1021.5, 1019.1, 1015.2, 1014.8, 1015.7, 1015.5, 10… #> $ q_mar_q4    <dbl> 1027.9, 1025.4, 1021.1, 1016.0, 1016.2, 1016.6, 1016.6, 10… #> $ p_max_min   <dbl> 0.0, 0.0, 0.0, 1.4, 2.7, 0.0, 0.2, 0.1, 0.0, 0.5, 0.4, 0.6… #> $ n_llu_cv    <dbl> 0.62, 0.53, 0.50, 0.48, 0.32, 0.47, 0.50, 0.48, 0.49, 0.48… #> $ n_nub_mn    <dbl> 18.0, 19.0, 19.0, 20.0, 21.0, 20.5, 16.0, 19.5, 19.0, 20.0… #> $ w_racha_q1  <dbl> 19.2, 20.6, 18.9, 18.9, 18.1, 17.6, 17.5, 16.9, 17.5, 18.1… #> $ w_racha_q3  <dbl> 23.4, 23.3, 22.7, 21.9, 21.0, 20.8, 21.7, 20.3, 20.5, 20.9… #> $ w_racha_q2  <dbl> 21.3, 22.2, 21.1, 20.0, 18.9, 18.8, 20.0, 18.6, 18.6, 19.2… #> $ n_nub_md    <dbl> 17.5, 17.9, 18.8, 18.9, 20.7, 18.9, 15.2, 18.3, 18.8, 20.2… #> $ w_racha_q4  <dbl> 24.9, 24.7, 25.6, 23.1, 25.8, 24.7, 24.7, 22.2, 22.5, 22.2… #> $ nt_00_cv    <dbl> 0.79, 0.74, 1.24, 3.81, NA, NA, NA, NA, NA, NA, 1.25, 0.78… #> $ np_010_q4   <dbl> 7.0, 6.0, 5.0, 8.8, 8.0, 6.0, 4.0, 3.8, 5.0, 9.0, 7.0, 8.0… #> $ np_010_q1   <dbl> 1.2, 2.0, 2.0, 3.2, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 3.0… #> $ np_010_q3   <dbl> 4.0, 5.0, 4.0, 6.0, 7.0, 4.6, 2.6, 2.6, 4.0, 6.2, 5.6, 4.0… #> $ np_010_q2   <dbl> 3.0, 3.0, 3.0, 4.0, 5.4, 3.0, 2.0, 2.0, 2.4, 4.0, 5.0, 3.0… #> $ nv_1000_q3  <dbl> 4.6, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.6, 4.0… #> $ ts_50_cv    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ nv_0100_s   <dbl> 0.46, 0.48, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.18… #> $ n_llu_max   <dbl> 17, 16, 17, 20, 20, 18, 11, 11, 13, 21, 16, 19, 120, 19, 1… #> $ tm_max_min  <dbl> 6.8, 10.0, 13.7, 15.2, 17.9, 24.2, 29.0, 28.6, 24.7, 17.3,… #> $ tm_min_md   <dbl> 2.7, 3.3, 5.8, 7.9, 11.8, 15.8, 18.3, 18.3, 15.2, 11.0, 6.… #> $ q_mar_cv    <dbl> 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00… #> $ nv_0100_n   <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 28, 29… #> $ tm_min_mn   <dbl> 2.8, 3.2, 5.6, 8.2, 12.0, 15.7, 18.1, 18.2, 15.1, 10.9, 6.… #> $ ts_10_mn    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ w_racha_cv  <dbl> 0.17, 0.15, 0.16, 0.12, 0.19, 0.20, 0.18, 0.14, 0.14, 0.16… #> $ evap_min    <dbl> 358, 519, 947, 1004, 1327, 1374, 2298, 1732, 1146, 813, 41… #> $ ta_max_cv   <dbl> 0.11, 0.09, 0.08, 0.09, 0.08, 0.06, 0.05, 0.05, 0.07, 0.08… #> $ n_llu_q4    <dbl> 12.0, 11.0, 10.8, 14.4, 14.0, 10.0, 8.0, 7.0, 11.0, 14.0, … #> $ n_llu_q2    <dbl> 8.4, 6.0, 7.0, 9.0, 10.0, 6.0, 4.0, 4.0, 5.6, 10.0, 9.0, 9… #> $ n_llu_q3    <dbl> 10.6, 10.0, 8.0, 11.0, 11.0, 8.0, 4.8, 5.8, 7.4, 11.0, 11.… #> $ n_llu_q1    <dbl> 3.0, 4.0, 5.0, 5.6, 9.0, 4.0, 3.0, 3.0, 4.8, 5.0, 6.0, 7.0… #> $ q_min_q4    <dbl> 980.9, 977.7, 978.5, 974.0, 977.2, 977.6, 978.3, 978.3, 97… #> $ hr_min      <dbl> 63, 60, 50, 49, 46, 40, 40, 41, 49, 57, 55, 66, 56, 53, 52… #> $ w_med_max   <dbl> 28, 27, 25, 26, 29, 27, 25, 21, 19, 19, 22, 25, 21, 11, 13… #> $ nw_91_mn    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0… #> $ q_min_q1    <dbl> 964.5, 966.2, 964.9, 965.3, 970.3, 973.6, 974.6, 974.4, 97… #> $ q_min_q2    <dbl> 969.1, 969.9, 970.1, 968.4, 972.7, 975.4, 975.8, 976.3, 97… #> $ q_min_q3    <dbl> 974.5, 973.5, 974.1, 972.7, 975.5, 976.9, 977.0, 977.1, 97… #> $ q_min_n     <dbl> 30, 30, 30, 29, 29, 30, 30, 30, 29, 29, 29, 29, 28, 30, 30… #> $ nw_91_md    <dbl> 0.5, 0.2, 0.2, 0.1, 0.2, 0.2, 0.2, 0.0, 0.0, 0.1, 0.0, 0.2… #> $ q_min_s     <dbl> 8.91, 8.38, 7.57, 5.16, 3.43, 2.49, 2.03, 2.24, 3.99, 7.01… #> $ n_tor_q4    <dbl> 0.0, 0.0, 1.0, 2.8, 6.0, 6.0, 6.0, 5.0, 4.0, 1.8, 0.0, 0.0… #> $ n_tor_q1    <dbl> 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.0, 0.0, 0.0… #> $ n_tor_q2    <dbl> 0.0, 0.0, 0.0, 1.0, 3.0, 3.0, 3.0, 3.4, 2.0, 1.0, 0.0, 0.0… #> $ n_tor_q3    <dbl> 0.0, 0.0, 0.0, 1.0, 4.0, 4.6, 4.0, 4.6, 3.0, 1.0, 0.0, 0.0… #> $ tm_mes_min  <dbl> 3.2, 5.5, 8.9, 10.4, 13.2, 18.5, 22.7, 22.9, 19.1, 13.6, 8… #> $ n_cub_max   <dbl> 16, 14, 12, 14, 12, 8, 6, 8, 8, 14, 16, 19, 102, 16, 11, 1… #> $ nw_55_cv    <dbl> 0.72, 0.47, 0.55, 0.48, 0.67, 0.62, 0.73, 0.66, 0.66, 0.59… #> $ tm_min_min  <dbl> -0.5, 0.8, 4.1, 5.5, 8.5, 12.8, 16.3, 16.5, 13.5, 8.6, 4.3… #> $ q_mar_max   <dbl> 1034.6, 1027.7, 1028.5, 1017.4, 1018.3, 1017.4, 1017.4, 10… #> $ nv_0100_q4  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0… #> $ nv_0100_q1  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ nv_0100_q2  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ nv_0100_q3  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0… #> $ q_max_q2    <dbl> 1001.7, 1001.5, 998.9, 994.8, 994.2, 993.9, 993.5, 993.0, … #> $ q_max_q3    <dbl> 1005.0, 1004.3, 1001.1, 996.9, 995.3, 994.3, 994.5, 994.1,… #> $ q_max_q1    <dbl> 1000.6, 998.0, 996.7, 993.5, 992.3, 992.1, 992.8, 992.6, 9… #> $ q_max_q4    <dbl> 1007.9, 1006.2, 1002.8, 998.8, 996.8, 995.7, 996.5, 995.2,… #> $ nv_0100_cv  <dbl> 2.77, 2.42, NA, NA, NA, NA, NA, NA, NA, 5.48, 2.59, 1.57, … #> $ ts_10_q3    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_10_q2    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_10_q1    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_10_q4    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ q_max_cv    <dbl> 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00… #> $ ta_max_max  <dbl> 20.0, 22.2, 28.0, 31.7, 36.5, 40.5, 43.1, 42.8, 38.0, 31.2… #> $ np_010_cv   <dbl> 0.83, 0.62, 0.61, 0.55, 0.47, 0.66, 0.67, 0.80, 0.62, 0.64… #> $ ta_max_q4   <dbl> 18.9, 20.6, 26.4, 29.8, 33.9, 38.5, 40.5, 39.0, 35.7, 29.7… #> $ ta_max_q3   <dbl> 17.7, 19.9, 24.7, 28.3, 33.0, 36.8, 39.1, 38.0, 34.5, 28.5… #> $ ta_max_q2   <dbl> 16.3, 18.8, 23.9, 26.7, 31.5, 36.0, 38.3, 37.0, 33.2, 27.0… #> $ ta_max_q1   <dbl> 15.8, 17.0, 23.1, 25.2, 29.7, 34.9, 37.6, 35.6, 31.2, 25.9… #> $ np_010_min  <dbl> 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 2, 1, 0, … #> $ w_med_n     <dbl> 30, 30, 30, 30, 29, 30, 30, 30, 30, 30, 30, 30, 29, 28, 28… #> $ nv_1000_q4  <dbl> 6.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 4.0, 7.8… #> $ nv_1000_q2  <dbl> 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 11, 2, 0, 0, 0, 0, 0, … #> $ n_nie_max   <dbl> 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 1, 4, 7, 5, 5, 2, 4, 0, 0, 0… #> $ nv_1000_q1  <dbl> 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 2.0… #> $ nv_1000_cv  <dbl> 0.87, 1.43, 3.05, 5.48, 2.59, NA, NA, NA, 3.05, 1.46, 0.93… #> $ glo_max     <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ n_fog_s     <dbl> 4.87, 3.06, 0.49, 0.61, 0.58, 0.40, 0.18, 0.00, 0.46, 1.14… #> $ ti_max_q2   <dbl> 3.3, 6.1, 9.5, 11.4, 14.5, 19.4, 24.1, 24.0, 19.1, 14.5, 8… #> $ n_fog_n     <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ n_nie_cv    <dbl> 1.77, 1.85, 2.42, 5.20, NA, NA, NA, NA, NA, NA, 3.05, 1.91… #> $ np_001_min  <dbl> 0, 0, 0, 2, 2, 0, 1, 1, 0, 2, 1, 1, 59, 0, 1, 0, 4, 2, 1, … #> $ nw_55_q4    <dbl> 13.2, 11.0, 14.8, 13.0, 11.4, 8.6, 11.0, 8.0, 6.8, 7.4, 10… #> $ n_fog_min   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, … #> $ nw_55_q2    <dbl> 4.6, 7.0, 7.0, 7.0, 5.0, 5.0, 4.0, 4.0, 4.0, 4.0, 4.6, 5.6… #> $ nw_55_q3    <dbl> 8.4, 9.0, 9.6, 10.0, 6.0, 6.0, 6.0, 5.0, 4.8, 5.0, 6.4, 7.… #> $ nw_55_q1    <dbl> 2.0, 5.0, 5.0, 5.0, 2.6, 3.0, 3.0, 2.0, 2.0, 2.0, 2.8, 2.8… #> $ hr_n        <dbl> 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 29, 28, 27… #> $ hr_s        <dbl> 5.66, 5.45, 4.48, 5.18, 4.83, 4.90, 3.80, 4.97, 4.61, 5.53… #> $ q_med_s     <dbl> 5.53, 4.77, 3.65, 2.11, 2.11, 1.51, 1.20, 1.26, 2.05, 2.80… #> $ nv_0050_max <dbl> 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 9… #> $ ta_min_q2   <dbl> -4.1, -2.9, -0.8, 2.5, 6.0, 10.4, 13.4, 13.4, 9.4, 4.5, -1… #> $ n_des_max   <dbl> 14, 10, 20, 16, 10, 18, 21, 19, 20, 13, 16, 12, 107, 21, 1… #> $ n_fog_mn    <dbl> 6.0, 1.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 3.5, 7.0… #> $ p_sol_max   <dbl> 72, 72, 80, 69, 74, 79, 87, 82, 76, 71, 77, 64, 66, 77, 70… #> $ np_001_s    <dbl> 4.89, 3.59, 3.14, 3.76, 3.57, 3.20, 2.13, 2.22, 2.84, 4.07… #> $ n_fog_md    <dbl> 6.5, 2.9, 0.4, 0.2, 0.3, 0.1, 0.0, 0.0, 0.2, 1.0, 3.9, 7.1… #> $ q_min_cv    <dbl> 0.01, 0.01, 0.01, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01… #> $ np_001_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ e_max       <dbl> 97, 99, 104, 115, 143, 170, 192, 219, 181, 157, 121, 99, 1… #> $ nt_00_md    <dbl> 7.6, 5.1, 1.4, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.9, 6.5… #> $ np_100_mn   <dbl> 0.0, 0.0, 0.0, 1.0, 1.0, 0.5, 0.0, 0.0, 0.5, 1.0, 0.0, 0.0… #> $ nt_30_q1    <dbl> 0.0, 0.0, 0.0, 0.0, 0.2, 10.2, 17.2, 15.4, 2.0, 0.0, 0.0, … #> $ nt_00_mn    <dbl> 6.5, 5.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 5.0… #> $ glo_q4      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ glo_q2      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ glo_q3      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ np_100_md   <dbl> 0.5, 0.6, 0.3, 1.1, 1.2, 0.8, 0.4, 0.4, 1.0, 1.0, 0.7, 0.4… #> $ inso_n      <dbl> 30, 30, 30, 30, 30, 30, 30, 29, 29, 30, 30, 30, 29, 23, 24… #> $ q_med_q1    <dbl> 986.2, 984.9, 983.7, 982.1, 982.6, 984.3, 984.6, 984.7, 98… #> $ np_001_md   <dbl> 7.8, 6.9, 6.3, 8.5, 9.0, 6.1, 4.0, 3.9, 5.2, 8.1, 8.2, 9.0… #> $ np_001_mn   <dbl> 7.0, 6.5, 6.0, 7.0, 8.0, 5.5, 3.5, 4.0, 5.0, 8.0, 8.0, 8.0… #> $ ti_max_cv   <dbl> 0.74, 0.41, 0.30, 0.18, 0.20, 0.15, 0.10, 0.08, 0.12, 0.18… #> $ nv_1000_mn  <dbl> 2.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5, 4.0… #> $ nv_1000_md  <dbl> 3.5, 1.6, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.5, 2.2, 4.5… #> $ evap_md     <dbl> 830, 1077, 1691, 1814, 2278, 2905, 3333, 3074, 2142, 1451,… #> $ ta_min_max  <dbl> 2.6, 1.6, 4.8, 4.0, 9.8, 15.1, 17.0, 16.5, 13.5, 9.4, 3.8,… #> $ e_md        <dbl> 75, 75, 83, 94, 118, 141, 158, 164, 147, 126, 95, 78, 113,… #> $ e_mn        <dbl> 74, 73, 84, 93, 116, 141, 158, 162, 146, 124, 96, 79, 112,… #> $ nt_30_q3    <dbl> 0.0, 0.0, 0.0, 0.0, 5.0, 15.0, 24.0, 23.6, 9.0, 0.0, 0.0, … #> $ ti_max_md   <dbl> 3.6, 6.9, 10.0, 11.4, 15.7, 20.6, 24.5, 24.2, 19.5, 14.7, … #> $ n_llu_n     <dbl> 25, 29, 30, 27, 29, 29, 27, 27, 28, 29, 30, 26, 22, 30, 30… #> $ ti_max_mn   <dbl> 4.1, 6.5, 10.4, 11.7, 16.0, 20.8, 24.6, 24.4, 19.5, 14.8, … #> $ glo_s       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ glo_n       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ts_min_cv   <dbl> 0.21, 0.19, 0.14, 0.11, 0.09, 0.07, 0.05, 0.05, 0.07, 0.10… #> $ n_llu_s     <dbl> 5.37, 4.14, 3.72, 4.82, 3.48, 3.53, 2.52, 2.44, 3.47, 4.87… #> $ nv_0050_mn  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ n_nie_q3    <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ n_nie_q2    <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0… #> $ n_nie_q4    <dbl> 1.8, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0… #> $ glo_cv      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ tm_max_max  <dbl> 13.2, 18.0, 20.7, 21.4, 27.3, 33.8, 35.6, 35.5, 30.7, 24.5… #> $ ts_20_mn    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ tm_max_cv   <dbl> 0.18, 0.16, 0.10, 0.08, 0.09, 0.07, 0.05, 0.05, 0.05, 0.08… #> $ ts_20_md    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ np_001_cv   <dbl> 0.63, 0.52, 0.50, 0.44, 0.40, 0.52, 0.53, 0.57, 0.54, 0.50… #> $ p_max_mn    <dbl> 6.5, 6.7, 5.2, 13.2, 16.1, 10.6, 7.2, 4.5, 9.8, 11.0, 9.1,… #> $ nw_91_max   <dbl> 6, 1, 2, 1, 1, 2, 2, 0, 1, 2, 1, 3, 10, 0, 0, 0, 1, 0, 0, … #> $ p_max_md    <dbl> 7.7, 9.8, 9.2, 16.8, 17.5, 13.7, 10.7, 9.4, 16.0, 14.8, 12… #> $ q_med_cv    <dbl> 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00… #> $ ts_50_max   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ts_50_min   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ ta_min_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ e_q4        <dbl> 82, 85, 92, 103, 128, 151, 168, 176, 158, 137, 104, 88, 11… #> $ e_q3        <dbl> 78, 77, 85, 98, 119, 142, 160, 163, 151, 127, 98, 81, 113,… #> $ e_q2        <dbl> 72, 71, 80, 90, 113, 135, 152, 159, 140, 119, 93, 74, 111,… #> $ e_q1        <dbl> 68, 67, 73, 86, 107, 131, 146, 150, 131, 116, 82, 69, 109,… #> $ glo_q1      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ w_racha_md  <dbl> 22.2, 22.7, 22.2, 21.3, 20.8, 20.7, 20.9, 19.6, 19.8, 19.9… #> $ q_min_min   <dbl> 955.2, 947.9, 953.7, 957.5, 966.7, 970.3, 972.0, 971.1, 96… #> $ ts_min_q3   <dbl> 9.5, 10.6, 11.4, 13.9, 17.3, 21.1, 22.5, 22.3, 20.2, 16.6,… #> $ ts_min_q2   <dbl> 8.4, 9.2, 10.9, 12.8, 16.5, 20.3, 22.0, 21.5, 19.3, 16.2, … #> $ ts_min_q1   <dbl> 7.1, 7.9, 10.2, 11.7, 15.5, 19.6, 21.1, 20.9, 18.4, 14.1, … #> $ p_mes_max   <dbl> 81.0, 70.5, 62.7, 126.6, 141.9, 82.8, 58.3, 88.6, 101.4, 1… #> $ ts_min_q4   <dbl> 10.8, 11.5, 12.4, 14.4, 18.1, 21.8, 23.2, 23.0, 20.6, 17.6… #> $ q_mar_min   <dbl> 1009.4, 1008.3, 1010.7, 1008.0, 1009.8, 1010.6, 1012.6, 10… #> $ tm_max_q3   <dbl> 11.2, 13.4, 17.6, 20.4, 25.1, 29.6, 32.6, 32.1, 27.5, 21.7… #> $ tm_max_q2   <dbl> 10.1, 11.9, 16.8, 19.3, 23.4, 28.8, 32.0, 31.4, 26.9, 20.8… #> $ tm_max_q1   <dbl> 8.8, 11.2, 16.2, 18.3, 22.8, 28.3, 30.8, 30.0, 25.6, 19.9,… #> $ p_mes_mn    <dbl> 14.1, 21.3, 13.2, 33.7, 34.0, 18.4, 10.5, 8.4, 22.5, 27.3,… #> $ tm_max_q4   <dbl> 12.3, 15.1, 18.6, 21.0, 26.0, 31.0, 34.1, 33.1, 28.3, 23.2… #> $ n_gra_mn    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ tm_min_max  <dbl> 6.0, 6.1, 8.9, 9.6, 13.7, 19.4, 20.8, 20.2, 17.5, 13.4, 9.… #> $ np_001_q4   <dbl> 12.6, 10.0, 9.0, 11.0, 11.8, 8.8, 6.0, 5.8, 7.8, 11.6, 11.… #> $ np_001_q3   <dbl> 9.0, 8.0, 7.0, 9.6, 9.0, 7.0, 4.0, 4.0, 5.0, 8.6, 9.0, 9.0… #> $ np_001_q2   <dbl> 6.0, 6.0, 5.4, 7.0, 8.0, 5.0, 3.0, 3.0, 4.0, 7.4, 7.4, 7.4… #> $ np_001_q1   <dbl> 3.0, 4.0, 4.0, 5.0, 6.0, 4.0, 2.0, 2.0, 3.0, 4.2, 5.0, 5.2… #> $ ti_max_n    <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30… #> $ w_med_md    <dbl> 16.5, 16.9, 18.5, 18.6, 17.6, 17.8, 17.8, 16.4, 14.3, 14.0… #> $ ti_max_q4   <dbl> 5.8, 8.5, 12.0, 13.2, 18.4, 23.3, 26.4, 25.7, 21.6, 16.8, … #> $ ti_max_q3   <dbl> 4.5, 7.0, 11.2, 11.8, 17.0, 21.5, 25.2, 24.7, 20.1, 15.5, … #> $ n_gra_q2    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ti_max_q1   <dbl> 1.0, 4.7, 7.0, 10.2, 12.8, 17.6, 22.4, 22.5, 17.1, 12.1, 6… #> $ ti_max_s    <dbl> 2.67, 2.79, 3.05, 2.07, 3.09, 3.03, 2.48, 2.02, 2.37, 2.67… #> $ q_med_q2    <dbl> 989.2, 988.2, 986.7, 983.6, 983.9, 985.8, 985.7, 985.1, 98… #> $ q_med_q3    <dbl> 992.7, 990.2, 988.2, 984.9, 985.0, 986.3, 986.4, 986.1, 98… #> $ nt_30_q2    <dbl> 0.0, 0.0, 0.0, 0.0, 2.0, 13.4, 22.0, 21.0, 6.0, 0.0, 0.0, … #> $ n_nie_min   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ nt_30_q4    <dbl> 0.0, 0.0, 0.0, 0.0, 7.0, 19.8, 26.0, 26.0, 11.0, 0.0, 0.0,… #> $ q_med_q4    <dbl> 996.1, 994.0, 990.0, 985.7, 986.5, 987.2, 987.3, 986.5, 98… #> $ n_cub_md    <dbl> 8.9, 5.2, 5.5, 6.5, 5.8, 2.9, 1.2, 1.8, 3.1, 5.4, 7.1, 9.7… #> $ n_cub_mn    <dbl> 9.0, 4.0, 5.5, 6.0, 5.0, 2.5, 1.0, 1.0, 3.0, 4.5, 7.0, 8.5… #> $ ta_max_min  <dbl> 12.8, 15.9, 19.6, 22.6, 24.8, 31.6, 34.4, 33.2, 29.6, 22.8… #> $ np_010_max  <dbl> 15, 8, 10, 15, 16, 11, 6, 7, 7, 13, 12, 16, 73, 14, 13, 11… #> $ inso_md     <dbl> 4.3, 5.9, 7.0, 7.6, 8.9, 10.3, 11.2, 10.2, 8.1, 6.3, 4.9, … #> $ inso_mn     <dbl> 4.1, 5.9, 6.8, 7.8, 9.1, 10.6, 11.4, 10.2, 7.9, 6.5, 5.2, … #> $ evap_mn     <dbl> 774, 1018, 1720, 1782, 2328, 2877, 3422, 3025, 2166, 1405,…"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"AEMET stations — aemet_stations","title":"AEMET stations — aemet_stations","text":"Get AEMET stations.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AEMET stations — aemet_stations","text":"","code":"aemet_stations(verbose = FALSE, return_sf = FALSE)"},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AEMET stations — aemet_stations","text":"verbose Logical TRUE/FALSE. Provides information flow information client server. return_sf Logical TRUE FALSE. function return sf spatial object? FALSE (default value) returns tibble. Note need sf package installed.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AEMET stations — aemet_stations","text":"tibble sf object","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_stations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"AEMET stations — aemet_stations","text":"Code modified project https://github.com/SevillaR/aemet","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_stations.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"AEMET stations — aemet_stations","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/aemet_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AEMET stations — aemet_stations","text":"","code":"library(tibble) stations <- aemet_stations() stations #> # A tibble: 291 × 7 #>    indicativo indsinop nombre                 provincia altitud longitud latitud #>    <chr>      <chr>    <chr>                  <chr>       <dbl>    <dbl>   <dbl> #>  1 0252D      \"08186\"  ARENYS DE MAR          BARCELONA      74     2.54    41.6 #>  2 0076       \"08181\"  BARCELONA AEROPUERTO   BARCELONA       4     2.07    41.3 #>  3 0200E      \"\"       BARCELONA, FABRA       BARCELONA     408     2.12    41.4 #>  4 0201D      \"08180\"  BARCELONA              BARCELONA       6     2.2     41.4 #>  5 0149X      \"08174\"  MANRESA                BARCELONA     291     1.84    41.7 #>  6 0229I      \"08192\"  SABADELL AEROPUERTO    BARCELONA     146     2.10    41.5 #>  7 0255B      \"08188\"  SANTA SUSANNA          BARCELONA      40     2.70    41.7 #>  8 0367       \"08184\"  GIRONA AEROPUERTO      GIRONA        143     2.76    41.9 #>  9 0370B      \"\"       GIRONA, ANTIC INSTITUT GIRONA         95     2.83    42.0 #> 10 0372C      \"08120\"  PORQUERES              GIRONA        157     2.76    42.1 #> # … with 281 more rows"},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"climaemet: Climate AEMET Tools — climaemet-package","title":"climaemet: Climate AEMET Tools — climaemet-package","text":"Tools download climatic data Spanish Meteorological Agency (AEMET) directly R using API create scientific graphs (climate charts, trend analysis climate time series, temperature precipitation anomalies maps, warming stripes graphics, climatograms, etc.).","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"climaemet: Climate AEMET Tools — climaemet-package","text":"Maintainer: Diego Hernangómez diego.hernangomezherrero@gmail.com (ORCID) (rOpenSpain) Authors: Manuel Pizarro (ORCID) [copyright holder] Gema Fernández-Avilés (ORCID)","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_climatogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Climatogram data for Zaragoza Airport (","title":"Climatogram data for Zaragoza Airport (","text":"Normal data Zaragoza Airport (1981-2010). example dataset used plot climatograms.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_climatogram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climatogram data for Zaragoza Airport (","text":"data.frame columns 1 12 (months) rows: p_mes_md: Precipitation (mm). tm_max_md: Maximum temperature (Celsius). tm_min_md: Minimum temperature (Celsius). ta_min_md: Absolute monthly minimum temperature (Celsius).","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_climatogram.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climatogram data for Zaragoza Airport (","text":"AEMET.","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_climatogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Climatogram data for Zaragoza Airport (","text":"","code":"data(climaemet_9434_climatogram)"},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_temp.html","id":null,"dir":"Reference","previous_headings":"","what":"Average annual temperatures for Zaragoza Airport (","title":"Average annual temperatures for Zaragoza Airport (","text":"Yearly observations average temperature Zaragoza Airport (1950-2020). example dataset.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_temp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Average annual temperatures for Zaragoza Airport (","text":"tibble columns: year: Year reference. indicativo: Identifier station. temp: Avg temperature (Celsius).","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_temp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Average annual temperatures for Zaragoza Airport (","text":"AEMET.","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_temp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average annual temperatures for Zaragoza Airport (","text":"","code":"data(climaemet_9434_temp)"},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_wind.html","id":null,"dir":"Reference","previous_headings":"","what":"Wind conditions for Zaragoza Airport (","title":"Wind conditions for Zaragoza Airport (","text":"Daily observations wind speed directions Zaragoza Airport (2000-2020). example dataset.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_wind.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wind conditions for Zaragoza Airport (","text":"tibble columns: fecha: Date observation. dir: Wind directions (0-360). velmedia: Avg wind speed (km/h).","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_wind.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wind conditions for Zaragoza Airport (","text":"AEMET.","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_9434_wind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wind conditions for Zaragoza Airport (","text":"","code":"data(climaemet_9434_wind)"},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_news.html","id":null,"dir":"Reference","previous_headings":"","what":"climaemet_news — climaemet_news","title":"climaemet_news — climaemet_news","text":"Show NEWS file climaemet package.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_news.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"climaemet_news — climaemet_news","text":"","code":"climaemet_news()"},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_news.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"climaemet_news — climaemet_news","text":"Open NEWS climaemet.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_news.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"climaemet_news — climaemet_news","text":"(See description)","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/climaemet_news.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"climaemet_news — climaemet_news","text":"","code":"# \\dontrun{ climaemet_news() # }"},{"path":"https://ropenspain.github.io/climaemet/reference/climatestripes_station.html","id":null,"dir":"Reference","previous_headings":"","what":"Station climate stripes graph — climatestripes_station","title":"Station climate stripes graph — climatestripes_station","text":"Plot climate stripes graph station","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatestripes_station.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Station climate stripes graph — climatestripes_station","text":"","code":"climatestripes_station(   station,   start = 1950,   end = 2020,   with_labels = \"yes\",   verbose = FALSE,   ... )"},{"path":"https://ropenspain.github.io/climaemet/reference/climatestripes_station.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Station climate stripes graph — climatestripes_station","text":"station Character string station identifier code(s) (see aemet_stations()) start Numeric value start year (format: YYYY). end Numeric value end year (format: YYYY). with_labels Character string yes/. Indicates whether use labels graph . verbose Logical TRUE/FALSE. Provides information flow information client server. ... Arguments passed ggstripes n_temp Numeric value number colors palette. (default 11). col_pal Character string indicating name hcl.pals() color palette used plotting.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatestripes_station.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Station climate stripes graph — climatestripes_station","text":"ggplot2 object","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatestripes_station.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Station climate stripes graph — climatestripes_station","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/climatestripes_station.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Station climate stripes graph — climatestripes_station","text":"","code":"# \\donttest{ climatestripes_station(   \"9434\",   start = 2010,   end = 2020,   with_labels = \"yes\",   col_pal = \"Inferno\" ) #> Data download may take a few minutes ... please wait  #> Warning: Internal Server Error (HTTP 500). #> Climate stripes plotting ...  # }"},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","title":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","text":"Plot Walter & Lieth climatic diagram normal climatology data station. climatogram great showing summary climate conditions place time period (1981-2010).","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","text":"","code":"climatogram_normal(   station,   labels = \"en\",   verbose = FALSE,   ggplot2 = TRUE,   ... )"},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","text":"station Character string station identifier code(s) (see aemet_stations()) labels Character string month labels X axis: \"en\" (english), \"es\" (spanish), \"fr\" (french), etc. verbose Logical TRUE/FALSE. Provides information flow information client server. ggplot2 TRUE/FALSE. TRUE function uses ggclimat_walter_lieth(), FALSE uses climatol::diagwl(). ... arguments climatol::diagwl() ggclimat_walter_lieth(), depending value ggplot2","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","text":"plot.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_normal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","text":"code based code CRAN package \"climatol\" Jose . Guijarro jguijarrop@aemet.es.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_normal.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","text":"need set API Key globally using aemet_api_key().","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","text":"Walter, H. & Lieth, H (1960): Klimadiagramm Weltatlas. G. Fischer, Jena.","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Walter & Lieth climatic diagram from normal climatology values — climatogram_normal","text":"","code":"climatogram_normal(\"9434\")"},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Walter & Lieth climatic diagram for a time period — climatogram_period","title":"Walter & Lieth climatic diagram for a time period — climatogram_period","text":"Plot Walter & Lieth climatic diagram monthly climatology data station. climatogram great showing summary climate conditions place specific time period.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Walter & Lieth climatic diagram for a time period — climatogram_period","text":"","code":"climatogram_period(   station = NULL,   start = 1990,   end = 2020,   labels = \"en\",   verbose = FALSE,   ggplot2 = TRUE,   ... )"},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Walter & Lieth climatic diagram for a time period — climatogram_period","text":"station Character string station identifier code(s) (see aemet_stations()) start Numeric value start year (format: YYYY). end Numeric value end year (format: YYYY). labels Character string month labels X axis: \"en\" (english), \"es\" (spanish), \"fr\" (french), etc. verbose Logical TRUE/FALSE. Provides information flow information client server. ggplot2 TRUE/FALSE. TRUE function uses ggclimat_walter_lieth(), FALSE uses climatol::diagwl(). ... arguments climatol::diagwl() ggclimat_walter_lieth(), depending value ggplot2","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_period.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Walter & Lieth climatic diagram for a time period — climatogram_period","text":"plot.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_period.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Walter & Lieth climatic diagram for a time period — climatogram_period","text":"code based code CRAN package \"climatol\" Jose . Guijarro jguijarrop@aemet.es.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_period.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Walter & Lieth climatic diagram for a time period — climatogram_period","text":"need set API Key globally using aemet_api_key().","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_period.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Walter & Lieth climatic diagram for a time period — climatogram_period","text":"Walter, H. & Lieth, H (1960): Klimadiagramm Weltatlas. G. Fischer, Jena.","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/climatogram_period.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Walter & Lieth climatic diagram for a time period — climatogram_period","text":"","code":"# \\donttest{ climatogram_period(\"9434\", start = 2015, end = 2020, labels = \"en\") #> Data download may take a few minutes ... please wait   # }"},{"path":"https://ropenspain.github.io/climaemet/reference/day_of_year.html","id":null,"dir":"Reference","previous_headings":"","what":"First and last day of year — first_day_of_year","title":"First and last day of year — first_day_of_year","text":"Get first last day year.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/day_of_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First and last day of year — first_day_of_year","text":"","code":"first_day_of_year(year = NULL)  last_day_of_year(year = NULL)"},{"path":"https://ropenspain.github.io/climaemet/reference/day_of_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First and last day of year — first_day_of_year","text":"year Numeric value year (format: YYYY).","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/day_of_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"First and last day of year — first_day_of_year","text":"Character string date (format: YYYY-MM-DD).","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/day_of_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"First and last day of year — first_day_of_year","text":"","code":"first_day_of_year(2000) #> [1] \"2000-01-01\" last_day_of_year(2020) #> [1] \"2020-12-31\""},{"path":"https://ropenspain.github.io/climaemet/reference/dms2decdegrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts dms to decimal degrees — dms2decdegrees","title":"Converts dms to decimal degrees — dms2decdegrees","text":"Converts degrees, minutes seconds decimal degrees.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/dms2decdegrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts dms to decimal degrees — dms2decdegrees","text":"","code":"dms2decdegrees(input = NULL)"},{"path":"https://ropenspain.github.io/climaemet/reference/dms2decdegrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts dms to decimal degrees — dms2decdegrees","text":"input Character string DMS coordinates.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/dms2decdegrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts dms to decimal degrees — dms2decdegrees","text":"numeric value.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/dms2decdegrees.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Converts dms to decimal degrees — dms2decdegrees","text":"Code modified project https://github.com/SevillaR/aemet","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/dms2decdegrees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts dms to decimal degrees — dms2decdegrees","text":"","code":"dms2decdegrees(\"055245W\") #> [1] -5.879167"},{"path":"https://ropenspain.github.io/climaemet/reference/get_data_aemet.html","id":null,"dir":"Reference","previous_headings":"","what":"Client tool for AEMET API — get_data_aemet","title":"Client tool for AEMET API — get_data_aemet","text":"Client tool get data metadata AEMET convert json tibble.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/get_data_aemet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Client tool for AEMET API — get_data_aemet","text":"","code":"get_data_aemet(apidest, verbose = FALSE)  get_metadata_aemet(apidest, verbose = FALSE)"},{"path":"https://ropenspain.github.io/climaemet/reference/get_data_aemet.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Client tool for AEMET API — get_data_aemet","text":"https://opendata.aemet.es/dist/index.html","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/get_data_aemet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Client tool for AEMET API — get_data_aemet","text":"apidest Character string destination URL. See https://opendata.aemet.es/dist/index.html. verbose Logical TRUE/FALSE. Provides information flow information client server.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/get_data_aemet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Client tool for AEMET API — get_data_aemet","text":"tibble empty tibble valid results API.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/get_data_aemet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Client tool for AEMET API — get_data_aemet","text":"","code":"# Run this example only if AEMET_API_KEY is detected  url <- \"/api/valores/climatologicos/inventarioestaciones/todasestaciones\"  get_data_aemet(url) #> # A tibble: 291 × 7 #>    latitud provincia altitud indicativo nombre                 indsinop longitud #>    <chr>   <chr>     <chr>   <chr>      <chr>                  <chr>    <chr>    #>  1 413515N BARCELONA 74      0252D      ARENYS DE MAR          \"08186\"  023224E  #>  2 411734N BARCELONA 4       0076       BARCELONA AEROPUERTO   \"08181\"  020412E  #>  3 412506N BARCELONA 408     0200E      BARCELONA, FABRA       \"\"       020727E  #>  4 412326N BARCELONA 6       0201D      BARCELONA              \"08180\"  021200E  #>  5 414312N BARCELONA 291     0149X      MANRESA                \"08174\"  015025E  #>  6 413125N BARCELONA 146     0229I      SABADELL AEROPUERTO    \"08192\"  020611E  #>  7 413903N BARCELONA 40      0255B      SANTA SUSANNA          \"08188\"  024149E  #>  8 415442N GIRONA    143     0367       GIRONA AEROPUERTO      \"08184\"  024548E  #>  9 415848N GIRONA    95      0370B      GIRONA, ANTIC INSTITUT \"\"       024931E  #> 10 420616N GIRONA    157     0372C      PORQUERES              \"08120\"  024549E  #> # … with 281 more rows   # Metadata  get_metadata_aemet(url) #> # A tibble: 7 × 7 #>   unidad_generadora         periodicidad descripcion formato copyright notaLegal #>   <chr>                     <chr>        <chr>       <chr>   <chr>     <chr>     #> 1 Servicio del Banco de Da… 1 vez al día Inventario… applic… © AEMET.… http://w… #> 2 Servicio del Banco de Da… 1 vez al día Inventario… applic… © AEMET.… http://w… #> 3 Servicio del Banco de Da… 1 vez al día Inventario… applic… © AEMET.… http://w… #> 4 Servicio del Banco de Da… 1 vez al día Inventario… applic… © AEMET.… http://w… #> 5 Servicio del Banco de Da… 1 vez al día Inventario… applic… © AEMET.… http://w… #> 6 Servicio del Banco de Da… 1 vez al día Inventario… applic… © AEMET.… http://w… #> 7 Servicio del Banco de Da… 1 vez al día Inventario… applic… © AEMET.… http://w… #> # … with 1 more variable: campos <df[,4]>"},{"path":"https://ropenspain.github.io/climaemet/reference/ggclimat_walter_lieth.html","id":null,"dir":"Reference","previous_headings":"","what":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","title":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","text":"Plot Walter Lieth climatic diagram station. function updated version climatol::diagwl(), Jose . Guijarro.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggclimat_walter_lieth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","text":"","code":"ggclimat_walter_lieth(   dat,   est = \"\",   alt = NA,   per = NA,   mlab = \"es\",   pcol = \"#002F70\",   tcol = \"#ff0000\",   pfcol = \"#9BAEE2\",   sfcol = \"#3C6FC4\",   shem = FALSE,   p3line = FALSE,   ... )"},{"path":"https://ropenspain.github.io/climaemet/reference/ggclimat_walter_lieth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","text":"dat Monthly climatic data diagram plotted. est Name climatological station alt Altitude climatological station per Period averages computed mlab Month labels X axis. Use 2-digit language code (\"en\", \"es\", etc.). See readr::locale() info. pcol Color pen precipitation. tcol Color pen temperature. pfcol Fill color probable frosts. sfcol Fill color sure frosts. shem Set TRUE southern hemisphere stations. p3line Set TRUE draw supplementary precipitation line referenced three times temperature (suggested Bogdan Rosca). ... graphic parameters","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggclimat_walter_lieth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","text":"ggplot2 object. See help(\"ggplot2\").","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggclimat_walter_lieth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","text":"See Details climatol::diagwl(). Climatic data must passed 4x12 matrix monthly (January December) data, following order: Row 1:  Mean precipitation. Row 2: Mean maximum daily temperature. Row 3: Mean minimum daily temperature. Row 4: Absolute monthly minimum temperature. See climaemet_9434_climatogram sample dataset.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggclimat_walter_lieth.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","text":"need set API Key globally using aemet_api_key().","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggclimat_walter_lieth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","text":"Walter, H., Lieth, H. 1960. Klimadiagramm-Weltatlas. G. Fischer.","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/ggclimat_walter_lieth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Walter and Lieth climatic diagram on ggplot2 — ggclimat_walter_lieth","text":"","code":"library(ggplot2)  wl <- ggclimat_walter_lieth(   climaemet::climaemet_9434_climatogram,   alt = \"249\",   per = \"1981-2010\",   est = \"Zaragoza Airport\" )  wl   # As it is a ggplot object we can modify it  wl + theme(   plot.background = element_rect(fill = \"grey80\"),   panel.background = element_rect(fill = \"grey70\"),   axis.text.y.left = element_text(     colour = \"black\",     face = \"italic\"   ),   axis.text.y.right = element_text(     colour = \"black\",     face = \"bold\"   ) )"},{"path":"https://ropenspain.github.io/climaemet/reference/ggstripes.html","id":null,"dir":"Reference","previous_headings":"","what":"Warming stripes graph — ggstripes","title":"Warming stripes graph — ggstripes","text":"Plot different \"climate stripes\" \"warming stripes\" using ggplot2. graphics visual representations change temperature measured location past 70-100+ years. stripe represents temperature station averaged year.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggstripes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warming stripes graph — ggstripes","text":"","code":"ggstripes(   data,   plot_type = \"stripes\",   plot_title = \"\",   n_temp = 11,   col_pal = \"RdBu\",   ... )"},{"path":"https://ropenspain.github.io/climaemet/reference/ggstripes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warming stripes graph — ggstripes","text":"data data.frame date(year) temperature(temp) variables. plot_type plot type (labels, background, stripes line trend animation). Accepted values \"background\", \"stripes\", \"trend\" \"animation\". plot_title character string used graph title. n_temp Numeric value number colors palette. (default 11). col_pal Character string indicating name hcl.pals() color palette used plotting. ... arguments passed ggplot2::theme().","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggstripes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warming stripes graph — ggstripes","text":"ggplot2 object.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggstripes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Warming stripes graph — ggstripes","text":"\"Warming stripes\" charts conceptual idea Professor Ed Hawkins (University Reading) specifically designed simple possible alert risks climate change. details see ShowYourStripes.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggstripes.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Warming stripes graph — ggstripes","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/ggstripes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Warming stripes graph — ggstripes","text":"","code":"library(ggplot2)  data <- climaemet::climaemet_9434_temp  ggstripes(data, plot_title = \"Zaragoza Airport\") +   labs(subtitle = \"(1950-2020)\") #> Climate stripes plotting ...   ggstripes(data, plot_title = \"Zaragoza Airport\", plot_type = \"trend\") +   labs(subtitle = \"(1950-2020)\") #> Climate stripes with temperature line trend plotting ..."},{"path":"https://ropenspain.github.io/climaemet/reference/ggwindrose.html","id":null,"dir":"Reference","previous_headings":"","what":"Windrose (speed/direction) diagram — ggwindrose","title":"Windrose (speed/direction) diagram — ggwindrose","text":"Plot windrose showing wind speed direction using ggplot2.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggwindrose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Windrose (speed/direction) diagram — ggwindrose","text":"","code":"ggwindrose(   speed,   direction,   n_directions = 8,   n_speeds = 5,   speed_cuts = NA,   col_pal = \"GnBu\",   legend_title = \"Wind speed (m/s)\",   calm_wind = 0,   n_col = 1,   facet = NULL,   plot_title = \"\",   ... )"},{"path":"https://ropenspain.github.io/climaemet/reference/ggwindrose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Windrose (speed/direction) diagram — ggwindrose","text":"speed Numeric vector wind speeds. direction Numeric vector wind directions. n_directions Numeric value number direction bins plot (petals rose). number directions defaults 8. n_speeds Numeric value number equally spaced wind speed bins plot. used speed_cuts NA (default 5). speed_cuts Numeric vector containing cut points wind speed intervals, NA (default). col_pal Character string indicating name hcl.pals() color palette used plotting. legend_title Character string used legend title. calm_wind Numeric value upper limit wind speed considered calm (default 0). n_col number columns plots (default 1). facet Character factor vector facets used plot various windroses. plot_title Character string used plot title. ... arguments (ignored).","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggwindrose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Windrose (speed/direction) diagram — ggwindrose","text":"ggplot object.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/ggwindrose.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Windrose (speed/direction) diagram — ggwindrose","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/ggwindrose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Windrose (speed/direction) diagram — ggwindrose","text":"","code":"library(ggplot2)  speed <- climaemet::climaemet_9434_wind$velmedia direction <- climaemet::climaemet_9434_wind$dir  rose <- ggwindrose(   speed = speed,   direction = direction,   speed_cuts = seq(0, 16, 4),   legend_title = \"Wind speed (m/s)\",   calm_wind = 0,   n_col = 1,   plot_title = \"Zaragoza Airport\" ) rose + labs(   subtitle = \"2000-2020\",   caption = \"Source: AEMET\" )"},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_days.html","id":null,"dir":"Reference","previous_headings":"","what":"Windrose (speed/direction) diagram of a station over a days period — windrose_days","title":"Windrose (speed/direction) diagram of a station over a days period — windrose_days","text":"Plot windrose showing wind speed direction station days period.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Windrose (speed/direction) diagram of a station over a days period — windrose_days","text":"","code":"windrose_days(   station,   start = \"2000-12-01\",   end = \"2000-12-31\",   n_directions = 8,   n_speeds = 5,   speed_cuts = NA,   col_pal = \"GnBu\",   calm_wind = 0,   legend_title = \"Wind Speed (m/s)\",   verbose = FALSE )"},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Windrose (speed/direction) diagram of a station over a days period — windrose_days","text":"station Character string station identifier code(s) (see aemet_stations()) \"\" stations. start Character string start date (format: YYYY-MM-DD). end Character string end date (format: YYYY-MM-DD). n_directions Numeric value number direction bins plot (petals rose). number directions defaults 8. n_speeds Numeric value number equally spaced wind speed bins plot. used speed_cuts NA (default 5). speed_cuts Numeric vector containing cut points wind speed intervals, NA (default). col_pal Character string indicating name hcl.pals() color palette used plotting. calm_wind Numeric value upper limit wind speed considered calm (default 0). legend_title Character string used legend title. verbose Logical TRUE/FALSE. Provides information flow information client server.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Windrose (speed/direction) diagram of a station over a days period — windrose_days","text":"ggplot2 object","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_days.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Windrose (speed/direction) diagram of a station over a days period — windrose_days","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_days.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Windrose (speed/direction) diagram of a station over a days period — windrose_days","text":"","code":"windrose_days(\"9434\",   start = \"2000-12-01\",   end = \"2000-12-31\",   speed_cuts = 4 ) #> Data download may take a few seconds ... please wait"},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Windrose (speed/direction) diagram of a station over a time period — windrose_period","title":"Windrose (speed/direction) diagram of a station over a time period — windrose_period","text":"Plot windrose showing wind speed direction station time period.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Windrose (speed/direction) diagram of a station over a time period — windrose_period","text":"","code":"windrose_period(   station,   start = 2000,   end = 2010,   n_directions = 8,   n_speeds = 5,   speed_cuts = NA,   col_pal = \"GnBu\",   calm_wind = 0,   legend_title = \"Wind Speed (m/s)\",   verbose = FALSE )"},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Windrose (speed/direction) diagram of a station over a time period — windrose_period","text":"station Character string station identifier code(s) (see aemet_stations()) \"\" stations. start Numeric value start year (format: YYYY). end Numeric value end year (format: YYYY). n_directions Numeric value number direction bins plot (petals rose). number directions defaults 8. n_speeds Numeric value number equally spaced wind speed bins plot. used speed_cuts NA (default 5). speed_cuts Numeric vector containing cut points wind speed intervals, NA (default). col_pal Character string indicating name hcl.pals() color palette used plotting. calm_wind Numeric value upper limit wind speed considered calm (default 0). legend_title Character string used legend title. verbose Logical TRUE/FALSE. Provides information flow information client server.","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_period.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Windrose (speed/direction) diagram of a station over a time period — windrose_period","text":"ggplot2 object","code":""},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_period.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API Key","title":"Windrose (speed/direction) diagram of a station over a time period — windrose_period","text":"need set API Key globally using aemet_api_key().","code":""},{"path":[]},{"path":"https://ropenspain.github.io/climaemet/reference/windrose_period.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Windrose (speed/direction) diagram of a station over a time period — windrose_period","text":"","code":"# \\donttest{ windrose_period(\"9434\",   start = 2000, end = 2010,   speed_cuts = 4 ) #> Data download may take a few minutes ... please wait   # }"},{"path":"https://ropenspain.github.io/climaemet/news/index.html","id":"climaemet-101","dir":"Changelog","previous_headings":"","what":"climaemet 1.0.1","title":"climaemet 1.0.1","text":"CRAN release: 2022-02-24 Add new citation. Adapt examples. Remove lubridate dependency. messages loading library.","code":""},{"path":"https://ropenspain.github.io/climaemet/news/index.html","id":"climaemet-100","dir":"Changelog","previous_headings":"","what":"climaemet 1.0.0","title":"climaemet 1.0.0","text":"CRAN release: 2021-09-16 package added rOpenSpain project: repo transferred https://github.com/rOpenSpain/climaemet","code":""},{"path":"https://ropenspain.github.io/climaemet/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes:","title":"climaemet 1.0.0","text":"apikey parameter deprecated functions. Now API Key globally managed via environment variable: see aemet_api_key().","code":""},{"path":"https://ropenspain.github.io/climaemet/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"climaemet 1.0.0","text":"Results provided tibble/tidyverse format. Results parsed correct formats (numbers dates possible). Spatial support: New option return_sf return sf objects instead tibbles. sf (>= 0.9) required, listed ‘Suggests’ strictly required. API functions gain new parameters, verbose, check results.","code":""},{"path":"https://ropenspain.github.io/climaemet/news/index.html","id":"enhancements-1-0-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"climaemet 1.0.0","text":"aemet_last_obs() now vectorized can also retrieve stations glance station = \"\" aemet_last_obs() now vectorized can also retrieve stations glance station = \"\" aemet_daily_clim() now vectorized can also retrieve stations glance station = \"\" New function get_metadata_aemet(). New function ggclimat_walter_lieth(). function now default climatogram_* functions (experimental). Old behavior can reproduced options ggplot2 = FALSE. Plot functions gains new parameters (verbose ...). Now possible pass colors plotting functions. New example datasets: climaemet_9434_climatogram, climaemet_9434_temp, climaemet_9434_wind.","code":""},{"path":"https://ropenspain.github.io/climaemet/news/index.html","id":"internal-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"climaemet 1.0.0","text":"Code optimization. Dependencies reviewed. Now palettes generated hcl.colors() (base R)","code":""},{"path":"https://ropenspain.github.io/climaemet/news/index.html","id":"climaemet-020","dir":"Changelog","previous_headings":"","what":"climaemet 0.2.0","title":"climaemet 0.2.0","text":"CRAN release: 2020-07-17 rename ggstripes_station() climatestripes_station(). climatogram_normal(). New function plot Walter & Lieth climatic diagram normal climatology values. climatogram_period(). New function plot Walter & Lieth climatic diagram specified time period. ggwindrose(). New function plot windrose diagram. windrose_days(). New function plot windrose (speed/direction) diagram station days period. windrose_period(). New function plot windrose (speed/direction) diagram station time period.","code":""},{"path":"https://ropenspain.github.io/climaemet/news/index.html","id":"climaemet-010","dir":"Changelog","previous_headings":"","what":"climaemet 0.1.0","title":"climaemet 0.1.0","text":"CRAN release: 2020-07-07 Firts release July 2020.","code":""}]
